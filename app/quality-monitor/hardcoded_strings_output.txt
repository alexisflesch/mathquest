{
  "timestamp": "2025-06-18T15:28:43.817029",
  "hardcoded_strings": [
    {
      "file": "frontend/next.config.ts",
      "module": "frontend",
      "line": 7,
      "column": 16,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "dirs: ['.'],",
      "fixable": false
    },
    {
      "file": "frontend/next.config.ts",
      "module": "frontend",
      "line": 18,
      "column": 67,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"../shared/logger.ts\"",
      "line_content": "config.resolve.alias[\"@logger\"] = path.resolve(__dirname, \"../shared/logger.ts\");",
      "fixable": false
    },
    {
      "file": "frontend/next.config.ts",
      "module": "frontend",
      "line": 20,
      "column": 67,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"../shared\"",
      "line_content": "config.resolve.alias[\"@shared\"] = path.resolve(__dirname, \"../shared\");",
      "fixable": false
    },
    {
      "file": "frontend/next.config.ts",
      "module": "frontend",
      "line": 22,
      "column": 63,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"../backend-backup/db/index.ts\"",
      "line_content": "config.resolve.alias[\"@db\"] = path.resolve(__dirname, \"../backend-backup/db/index.ts\");",
      "fixable": false
    },
    {
      "file": "frontend/next.config.ts",
      "module": "frontend",
      "line": 26,
      "column": 49,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'..'",
      "line_content": "outputFileTracingRoot: path.join(__dirname, '..'), // Point to the monorepo root (app/)",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 54,
      "column": 28,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/dashboard'",
      "line_content": "const teacherRoutes = ['/teacher/dashboard', '/teacher/quiz', '/teacher/results'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 54,
      "column": 50,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/quiz'",
      "line_content": "const teacherRoutes = ['/teacher/dashboard', '/teacher/quiz', '/teacher/results'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 54,
      "column": 67,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/results'",
      "line_content": "const teacherRoutes = ['/teacher/dashboard', '/teacher/quiz', '/teacher/results'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 55,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/my-tournaments'",
      "line_content": "const authenticatedRoutes = ['/my-tournaments'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 67,
      "column": 46,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "return NextResponse.redirect(new URL('/login', request.url));",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 73,
      "column": 22,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "if (pathname === '/login') {",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 84,
      "column": 9,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/my-tournaments'",
      "line_content": "'/my-tournaments',",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 85,
      "column": 9,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "'/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 54,
      "column": 28,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/dashboard'",
      "line_content": "const teacherRoutes = ['/teacher/dashboard', '/teacher/quiz', '/teacher/results'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 54,
      "column": 50,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/quiz'",
      "line_content": "const teacherRoutes = ['/teacher/dashboard', '/teacher/quiz', '/teacher/results'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 54,
      "column": 67,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/results'",
      "line_content": "const teacherRoutes = ['/teacher/dashboard', '/teacher/quiz', '/teacher/results'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 55,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/my-tournaments'",
      "line_content": "const authenticatedRoutes = ['/my-tournaments'];",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 63,
      "column": 46,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login?mode=teacher'",
      "line_content": "return NextResponse.redirect(new URL('/login?mode=teacher', request.url));",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 67,
      "column": 46,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "return NextResponse.redirect(new URL('/login', request.url));",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 73,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "if (pathname === '/login') {",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 82,
      "column": 9,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/:path*'",
      "line_content": "'/student/:path*',",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 83,
      "column": 9,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/:path*'",
      "line_content": "'/teacher/:path*',",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 84,
      "column": 9,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/my-tournaments'",
      "line_content": "'/my-tournaments',",
      "fixable": false
    },
    {
      "file": "frontend/src/middleware.ts",
      "module": "frontend",
      "line": 85,
      "column": 9,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "'/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/config.ts",
      "module": "frontend",
      "line": 16,
      "column": 11,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',            // Updated to match backend path",
      "fixable": false
    },
    {
      "file": "frontend/src/utils/socketValidation.ts",
      "module": "frontend",
      "line": 63,
      "column": 39,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "path: issue.path.join('.'),",
      "fixable": false
    },
    {
      "file": "frontend/src/utils/socketMiddleware.ts",
      "module": "frontend",
      "line": 16,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./socketValidation'",
      "line_content": "} from './socketValidation';",
      "fixable": false
    },
    {
      "file": "frontend/src/utils/socketConnectionPool.ts",
      "module": "frontend",
      "line": 170,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Socket connection error'",
      "line_content": "logger.error('Socket connection error', { error: error.message });",
      "fixable": false
    },
    {
      "file": "frontend/src/utils/socketConnectionPool.ts",
      "module": "frontend",
      "line": 194,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Max reconnection attempts reached'",
      "line_content": "logger.error('Max reconnection attempts reached');",
      "fixable": false
    },
    {
      "file": "frontend/src/utils/socketConnectionPool.ts",
      "module": "frontend",
      "line": 161,
      "column": 21,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "this.socket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/utils/socketConnectionPool.ts",
      "module": "frontend",
      "line": 198,
      "column": 21,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "this.socket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 66,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('useAuth must be used within an AuthProvider'",
      "line_content": "throw new Error('useAuth must be used within an AuthProvider');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 149,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Registration failed: '",
      "line_content": "throw new Error('Registration failed: ' + (result.message || 'Unknown error'));",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 187,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Could not establish userId for guest user - game joining will be blocked'",
      "line_content": "logger.error('Could not establish userId for guest user - game joining will be blocked');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 205,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error setting guest profile:'",
      "line_content": "logger.error('Error setting guest profile:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 206,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Impossible de sauvegarder le profil invit\u00e9'",
      "line_content": "throw new Error('Impossible de sauvegarder le profil invit\u00e9');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 232,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error clearing guest profile:'",
      "line_content": "logger.error('Error clearing guest profile:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 238,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Seuls les comptes invit\u00e9s peuvent \u00eatre upgrad\u00e9s'",
      "line_content": "throw new Error('Seuls les comptes invit\u00e9s peuvent \u00eatre upgrad\u00e9s');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 243,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Cookie ID manquant pour l\\'",
      "line_content": "throw new Error('Cookie ID manquant pour l\\'upgrade');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 286,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error upgrading guest account:'",
      "line_content": "logger.error('Error upgrading guest account:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 324,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('R\u00e9ponse de connexion inattendue ou \u00e9chec de l\\'",
      "line_content": "throw new Error('R\u00e9ponse de connexion inattendue ou \u00e9chec de l\\'authentification');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 327,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error logging in student:'",
      "line_content": "logger.error('Error logging in student:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 363,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Erreur lors de la cr\u00e9ation du compte'",
      "line_content": "throw new Error('Erreur lors de la cr\u00e9ation du compte');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 366,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error registering student:'",
      "line_content": "logger.error('Error registering student:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 403,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Email ou mot de passe incorrect'",
      "line_content": "throw new Error('Email ou mot de passe incorrect');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 406,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error logging in teacher:'",
      "line_content": "logger.error('Error logging in teacher:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 449,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Erreur lors de la cr\u00e9ation du compte enseignant'",
      "line_content": "throw new Error('Erreur lors de la cr\u00e9ation du compte enseignant');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 452,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error registering teacher:'",
      "line_content": "logger.error('Error registering teacher:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 489,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Erreur lors de la mise \u00e0 jour du profil'",
      "line_content": "throw new Error('Erreur lors de la mise \u00e0 jour du profil');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 492,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error updating profile:'",
      "line_content": "logger.error('Error updating profile:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 649,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error fetching auth status:'",
      "line_content": "logger.error('Error fetching auth status:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 798,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Format de r\u00e9ponse inattendu du serveur'",
      "line_content": "throw new Error('Format de r\u00e9ponse inattendu du serveur');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 801,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error in universal login:'",
      "line_content": "logger.error('Error in universal login:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 868,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error during logout:'",
      "line_content": "logger.error('Error during logout:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 115,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/register'",
      "line_content": "'/api/auth/register',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 161,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/status'",
      "line_content": "'/api/auth/status',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 248,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/upgrade'",
      "line_content": "'/api/auth/upgrade',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 294,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/universal-login'",
      "line_content": "'/api/auth/universal-login',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 335,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/register'",
      "line_content": "'/api/auth/register',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 374,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth'",
      "line_content": "'/api/auth',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 414,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth'",
      "line_content": "'/api/auth',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 467,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/profile'",
      "line_content": "'/api/auth/profile',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 552,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/status'",
      "line_content": "const response = await fetch('/api/auth/status', {",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 590,
      "column": 73,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "const payload = JSON.parse(atob(token.split('.')[1]));",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 737,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/universal-login'",
      "line_content": "'/api/auth/universal-login',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AuthProvider.tsx",
      "module": "frontend",
      "line": 838,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/logout'",
      "line_content": "'/api/auth/logout',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/ErrorBoundary.tsx",
      "module": "frontend",
      "line": 41,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('React Error Boundary caught an error:'",
      "line_content": "logger.error('React Error Boundary caught an error:', {",
      "fixable": false
    },
    {
      "file": "frontend/src/components/ErrorBoundary.tsx",
      "module": "frontend",
      "line": 141,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Socket Error Boundary:'",
      "line_content": "logger.error('Socket Error Boundary:', {",
      "fixable": false
    },
    {
      "file": "frontend/src/components/QuestionDisplay.tsx",
      "module": "frontend",
      "line": 236,
      "column": 75,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.5s'",
      "line_content": "transition: `transform ${isOpen ? '.5s' : '1s'} cubic-bezier(0.4,0,0.2,1)`,",
      "fixable": false
    },
    {
      "file": "frontend/src/components/InfinityCountDown.tsx",
      "module": "frontend",
      "line": 6,
      "column": 7,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "SIZE = 200",
      "line_content": "const SIZE = 200;      // px",
      "fixable": true
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 172,
      "column": 48,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student'",
      "line_content": "{ label: 'Espace \u00e9l\u00e8ve', href: '/student' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 173,
      "column": 53,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "{ label: 'Espace enseignant', href: '/teacher/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 180,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 181,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 182,
      "column": 48,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 185,
      "column": 27,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/home'",
      "line_content": "href: '/teacher/home',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 187,
      "column": 57,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/quiz/create'",
      "line_content": "{ label: 'Cr\u00e9er un quiz', href: '/teacher/quiz/create' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 188,
      "column": 69,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/quiz/use'",
      "line_content": "{ label: 'Utiliser un quiz existant', href: '/teacher/quiz/use' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 199,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 200,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 201,
      "column": 48,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 202,
      "column": 53,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "{ label: 'Espace enseignant', href: '/teacher/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 100,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching teacher profile:'",
      "line_content": "console.error('Error fetching teacher profile:', e);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 113,
      "column": 69,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "const payload = JSON.parse(atob(token.split('.')[1]));",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 148,
      "column": 32,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "window.location.href = '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 171,
      "column": 43,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 172,
      "column": 48,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student'",
      "line_content": "{ label: 'Espace \u00e9l\u00e8ve', href: '/student' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 173,
      "column": 53,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "{ label: 'Espace enseignant', href: '/teacher/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 178,
      "column": 43,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 179,
      "column": 54,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game?training=true'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/create-game?training=true' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 180,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 181,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 182,
      "column": 48,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 185,
      "column": 27,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/home'",
      "line_content": "href: '/teacher/home',",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 187,
      "column": 57,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/quiz/create'",
      "line_content": "{ label: 'Cr\u00e9er un quiz', href: '/teacher/quiz/create' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 188,
      "column": 69,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/quiz/use'",
      "line_content": "{ label: 'Utiliser un quiz existant', href: '/teacher/quiz/use' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 197,
      "column": 43,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 198,
      "column": 54,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game?training=true'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/create-game?training=true' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 199,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 200,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 201,
      "column": 48,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.back.tsx",
      "module": "frontend",
      "line": 202,
      "column": 53,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "{ label: 'Espace enseignant', href: '/teacher/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/InfinitySpin.tsx",
      "module": "frontend",
      "line": 37,
      "column": 27,
      "type": "urls",
      "severity": "medium",
      "description": "Hardcoded URL found",
      "matched_text": "\"http://www.w3.org/2000/svg\"",
      "line_content": "xmlns=\"http://www.w3.org/2000/svg\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/InfinitySpin.tsx",
      "module": "frontend",
      "line": 8,
      "column": 5,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "size = 100",
      "line_content": "size = 100,",
      "fixable": true
    },
    {
      "file": "frontend/src/components/QuestionSelector.tsx",
      "module": "frontend",
      "line": 67,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching filters:'",
      "line_content": "console.error('Error fetching filters:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/QuestionSelector.tsx",
      "module": "frontend",
      "line": 101,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching questions:'",
      "line_content": "console.error('Error fetching questions:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/QuestionSelector.tsx",
      "module": "frontend",
      "line": 144,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching question:'",
      "line_content": "console.error('Error fetching question:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/QuestionSelector.tsx",
      "module": "frontend",
      "line": 195,
      "column": 35,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "\"select select-bordered select-lg w-full\"",
      "line_content": "className=\"select select-bordered select-lg w-full\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/QuestionSelector.tsx",
      "module": "frontend",
      "line": 203,
      "column": 35,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "\"select select-bordered select-lg w-full\"",
      "line_content": "className=\"select select-bordered select-lg w-full\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/QuestionSelector.tsx",
      "module": "frontend",
      "line": 211,
      "column": 35,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "\"select select-bordered select-lg w-full\"",
      "line_content": "className=\"select select-bordered select-lg w-full\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/QuestionSelector.tsx",
      "module": "frontend",
      "line": 91,
      "column": 22,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "limit=100",
      "line_content": "params.push('limit=100');",
      "fixable": true
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 151,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "{ label: 'Se connecter', href: '/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 161,
      "column": 60,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 162,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 163,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 164,
      "column": 46,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/profile'",
      "line_content": "{ label: 'Profil', href: '/profile' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 172,
      "column": 60,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 173,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 174,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 176,
      "column": 53,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/games'",
      "line_content": "{ label: 'Mes activit\u00e9s', href: '/teacher/games' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 177,
      "column": 58,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/games/new'",
      "line_content": "{ label: 'Cr\u00e9er une activit\u00e9', href: '/teacher/games/new' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 179,
      "column": 50,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/profile'",
      "line_content": "{ label: 'Mon profil', href: '/profile' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 187,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "{ label: 'Se connecter', href: '/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 110,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('[AppNav] Logout error:'",
      "line_content": "console.error('[AppNav] Logout error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 101,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "(window.location.pathname === '/' || window.location.pathname === '');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 104,
      "column": 63,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/?loggedOut=true'",
      "line_content": "const redirectUrl = isOnLandingPage ? undefined : '/?loggedOut=true';",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 114,
      "column": 46,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "window.location.pathname !== '/' &&",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 116,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/?loggedOut=true'",
      "line_content": "window.location.href = '/?loggedOut=true';",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 150,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 151,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "{ label: 'Se connecter', href: '/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 159,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 160,
      "column": 58,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game?training=true'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/create-game?training=true' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 161,
      "column": 60,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 162,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 163,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 164,
      "column": 46,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/profile'",
      "line_content": "{ label: 'Profil', href: '/profile' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 170,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 171,
      "column": 58,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game?training=true'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/create-game?training=true' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 172,
      "column": 60,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 173,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 174,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 176,
      "column": 53,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/games'",
      "line_content": "{ label: 'Mes activit\u00e9s', href: '/teacher/games' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 177,
      "column": 58,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/games/new'",
      "line_content": "{ label: 'Cr\u00e9er une activit\u00e9', href: '/teacher/games/new' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 179,
      "column": 50,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/profile'",
      "line_content": "{ label: 'Mon profil', href: '/profile' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 186,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/AppNav.tsx",
      "module": "frontend",
      "line": 187,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "{ label: 'Se connecter', href: '/login' },",
      "fixable": false
    },
    {
      "file": "frontend/src/components/profile/AccountUpgradeForm.tsx",
      "module": "frontend",
      "line": 32,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Les mots de passe ne correspondent pas'",
      "line_content": "throw new Error('Les mots de passe ne correspondent pas');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/profile/TeacherUpgradeForm.tsx",
      "module": "frontend",
      "line": 29,
      "column": 17,
      "type": "user_messages",
      "severity": "high",
      "description": "Hardcoded user-facing message",
      "matched_text": "alert('Les mots de passe ne correspondent pas'",
      "line_content": "alert('Les mots de passe ne correspondent pas');",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/GuestNavbar.tsx",
      "module": "frontend",
      "line": 100,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/student/join\"",
      "line_content": "href=\"/student/join\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/GuestNavbar.tsx",
      "module": "frontend",
      "line": 92,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/\"",
      "line_content": "href=\"/\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/GuestNavbar.tsx",
      "module": "frontend",
      "line": 100,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/student/join\"",
      "line_content": "href=\"/student/join\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/GuestNavbar.tsx",
      "module": "frontend",
      "line": 110,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/login?upgrade=true\"",
      "line_content": "href=\"/login?upgrade=true\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/GuestNavbar.tsx",
      "module": "frontend",
      "line": 160,
      "column": 48,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/login?upgrade=true\"",
      "line_content": "<Link href=\"/login?upgrade=true\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/AnonymousNavbar.tsx",
      "module": "frontend",
      "line": 55,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/login\"",
      "line_content": "href=\"/login\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/AnonymousNavbar.tsx",
      "module": "frontend",
      "line": 85,
      "column": 36,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/login\"",
      "line_content": "<Link href=\"/login\" className=\"btn btn-primary btn-sm\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/AnonymousNavbar.tsx",
      "module": "frontend",
      "line": 55,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/login\"",
      "line_content": "href=\"/login\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/AnonymousNavbar.tsx",
      "module": "frontend",
      "line": 85,
      "column": 36,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/login\"",
      "line_content": "<Link href=\"/login\" className=\"btn btn-primary btn-sm\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 58,
      "column": 40,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher\"",
      "line_content": "<Link href=\"/teacher\" className=\"flex items-center space-x-2\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 83,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher\"",
      "line_content": "href=\"/teacher\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 92,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/classes\"",
      "line_content": "href=\"/teacher/classes\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 101,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/students\"",
      "line_content": "href=\"/teacher/students\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 110,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/create\"",
      "line_content": "href=\"/create\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 119,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games\"",
      "line_content": "href=\"/teacher/games\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 128,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/analytics\"",
      "line_content": "href=\"/teacher/analytics\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 137,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/reports\"",
      "line_content": "href=\"/teacher/reports\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 146,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/practice\"",
      "line_content": "href=\"/practice\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 182,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/profile\"",
      "line_content": "href=\"/teacher/profile\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 190,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/settings\"",
      "line_content": "href=\"/teacher/settings\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 224,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/profile\"",
      "line_content": "<li><Link href=\"/teacher/profile\">Profile Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 225,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/settings\"",
      "line_content": "<li><Link href=\"/teacher/settings\">Account Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 249,
      "column": 32,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher\"",
      "line_content": "<Link href=\"/teacher\" className=\"flex items-center space-x-2\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 278,
      "column": 44,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/profile\"",
      "line_content": "<li><Link href=\"/teacher/profile\">Profile Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 279,
      "column": 44,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/settings\"",
      "line_content": "<li><Link href=\"/teacher/settings\">Account Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 295,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher\"",
      "line_content": "href=\"/teacher\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 304,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/classes\"",
      "line_content": "href=\"/teacher/classes\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 313,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/students\"",
      "line_content": "href=\"/teacher/students\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 322,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/create\"",
      "line_content": "href=\"/create\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 331,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games\"",
      "line_content": "href=\"/teacher/games\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 340,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/analytics\"",
      "line_content": "href=\"/teacher/analytics\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 349,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/reports\"",
      "line_content": "href=\"/teacher/reports\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 358,
      "column": 42,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/practice\"",
      "line_content": "href=\"/practice\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 114,
      "column": 51,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "'Create Game'",
      "line_content": "{!sidebarCollapsed && 'Create Game'}",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 46,
      "column": 36,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "window.location.href = '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 58,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher\"",
      "line_content": "<Link href=\"/teacher\" className=\"flex items-center space-x-2\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 60,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/mathquest-logo.png\"",
      "line_content": "src=\"/mathquest-logo.png\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 83,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher\"",
      "line_content": "href=\"/teacher\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 92,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/classes\"",
      "line_content": "href=\"/teacher/classes\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 101,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/students\"",
      "line_content": "href=\"/teacher/students\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 110,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/create\"",
      "line_content": "href=\"/create\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 119,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games\"",
      "line_content": "href=\"/teacher/games\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 128,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/analytics\"",
      "line_content": "href=\"/teacher/analytics\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 137,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/reports\"",
      "line_content": "href=\"/teacher/reports\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 146,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/practice\"",
      "line_content": "href=\"/practice\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 163,
      "column": 77,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/default-avatar.png'",
      "line_content": "src={userProfile?.avatar || '/default-avatar.png'}",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 182,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/profile\"",
      "line_content": "href=\"/teacher/profile\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 190,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/settings\"",
      "line_content": "href=\"/teacher/settings\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 212,
      "column": 81,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/default-avatar.png'",
      "line_content": "src={userProfile?.avatar || '/default-avatar.png'}",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 224,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/profile\"",
      "line_content": "<li><Link href=\"/teacher/profile\">Profile Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 225,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/settings\"",
      "line_content": "<li><Link href=\"/teacher/settings\">Account Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 249,
      "column": 32,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher\"",
      "line_content": "<Link href=\"/teacher\" className=\"flex items-center space-x-2\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 251,
      "column": 33,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/mathquest-logo.png\"",
      "line_content": "src=\"/mathquest-logo.png\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 266,
      "column": 69,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/default-avatar.png'",
      "line_content": "src={userProfile?.avatar || '/default-avatar.png'}",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 278,
      "column": 44,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/profile\"",
      "line_content": "<li><Link href=\"/teacher/profile\">Profile Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 279,
      "column": 44,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/settings\"",
      "line_content": "<li><Link href=\"/teacher/settings\">Account Settings</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 295,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher\"",
      "line_content": "href=\"/teacher\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 304,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/classes\"",
      "line_content": "href=\"/teacher/classes\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 313,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/students\"",
      "line_content": "href=\"/teacher/students\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 322,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/create\"",
      "line_content": "href=\"/create\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 331,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games\"",
      "line_content": "href=\"/teacher/games\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 340,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/analytics\"",
      "line_content": "href=\"/teacher/analytics\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 349,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/reports\"",
      "line_content": "href=\"/teacher/reports\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/TeacherNavbar.tsx",
      "module": "frontend",
      "line": 358,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/practice\"",
      "line_content": "href=\"/practice\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 96,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/student/join\"",
      "line_content": "href=\"/student/join\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 104,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/student/create-game\"",
      "line_content": "href=\"/student/create-game\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 112,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/student/practice/session\"",
      "line_content": "href=\"/student/practice/session\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 122,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/my-tournaments\"",
      "line_content": "href=\"/my-tournaments\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 130,
      "column": 34,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/student/profile\"",
      "line_content": "href=\"/student/profile\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 180,
      "column": 48,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/student/profile\"",
      "line_content": "<Link href=\"/student/profile\">",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 41,
      "column": 36,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "window.location.href = '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 88,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/\"",
      "line_content": "href=\"/\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 96,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/student/join\"",
      "line_content": "href=\"/student/join\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 104,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/student/create-game\"",
      "line_content": "href=\"/student/create-game\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 112,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/student/practice/session\"",
      "line_content": "href=\"/student/practice/session\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 122,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/my-tournaments\"",
      "line_content": "href=\"/my-tournaments\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 130,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/student/profile\"",
      "line_content": "href=\"/student/profile\"",
      "fixable": false
    },
    {
      "file": "frontend/src/components/auth/NavbarStates/StudentNavbar.tsx",
      "module": "frontend",
      "line": 180,
      "column": 48,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/student/profile\"",
      "line_content": "<Link href=\"/student/profile\">",
      "fixable": false
    },
    {
      "file": "frontend/src/config/gameConfig.ts",
      "module": "frontend",
      "line": 175,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Game configuration validation errors:'",
      "line_content": "console.error('Game configuration validation errors:', errors);",
      "fixable": false
    },
    {
      "file": "frontend/src/config/api.ts",
      "module": "frontend",
      "line": 88,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('API Response validation failed:'",
      "line_content": "console.error('API Response validation failed:', {",
      "fixable": false
    },
    {
      "file": "frontend/src/config/api.ts",
      "module": "frontend",
      "line": 23,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "const cleanEndpoint = endpoint.startsWith('/') ? endpoint.slice(1) : endpoint;",
      "fixable": false
    },
    {
      "file": "frontend/src/config/api.ts",
      "module": "frontend",
      "line": 51,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/'",
      "line_content": "const isNextJsRoute = endpoint.startsWith('/api/');",
      "fixable": false
    },
    {
      "file": "frontend/src/config/api.ts",
      "module": "frontend",
      "line": 111,
      "column": 45,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/'",
      "line_content": "const apiEndpoint = endpoint.startsWith('/api/') ? endpoint : `/api/${endpoint}`;",
      "fixable": false
    },
    {
      "file": "frontend/src/config/index.ts",
      "module": "frontend",
      "line": 8,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../config'",
      "line_content": "export { API_URL, SOCKET_CONFIG } from '../config';",
      "fixable": false
    },
    {
      "file": "frontend/src/config/index.ts",
      "module": "frontend",
      "line": 27,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./gameConfig'",
      "line_content": "} from './gameConfig';",
      "fixable": false
    },
    {
      "file": "frontend/src/config/index.ts",
      "module": "frontend",
      "line": 30,
      "column": 39,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./gameConfig'",
      "line_content": "export { default as gameConfig } from './gameConfig';",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useUnifiedGameManager.ts",
      "module": "frontend",
      "line": 495,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Missing gameId for setQuestion'",
      "line_content": "logger.error('Missing gameId for setQuestion');",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useUnifiedGameManager.ts",
      "module": "frontend",
      "line": 519,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Missing accessCode for endGame'",
      "line_content": "logger.error('Missing accessCode for endGame');",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useUnifiedGameManager.ts",
      "module": "frontend",
      "line": 531,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Missing accessCode for lockAnswers'",
      "line_content": "logger.error('Missing accessCode for lockAnswers');",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useUnifiedGameManager.ts",
      "module": "frontend",
      "line": 543,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Missing accessCode for unlockAnswers'",
      "line_content": "logger.error('Missing accessCode for unlockAnswers');",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useUnifiedGameManager.ts",
      "module": "frontend",
      "line": 584,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Missing accessCode for getState (projection role)'",
      "line_content": "logger.error('Missing accessCode for getState (projection role)');",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useUnifiedGameManager.ts",
      "module": "frontend",
      "line": 509,
      "column": 37,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on(\n                    'start'",
      "line_content": "socket.emitTimerAction(",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 113,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('stats_update'",
      "line_content": "socket.socket.on('stats_update' as keyof ServerToClientEvents, statsUpdateHandler);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 125,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('answers_locked'",
      "line_content": "socket.socket.on('answers_locked' as keyof ServerToClientEvents, answersLockedHandler);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 136,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connected_count'",
      "line_content": "socket.socket.on('connected_count' as keyof ServerToClientEvents, connectedCountHandler);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 147,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('dashboard_answer_stats_update'",
      "line_content": "socket.socket.on('dashboard_answer_stats_update' as keyof ServerToClientEvents, answerStatsHandler);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 162,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "socket.socket.emit('set_question', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 173,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('end_game'",
      "line_content": "socket.socket.emit('end_game', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 184,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "socket.socket.emit('quiz_timer_action', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 196,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "socket.socket.emit('quiz_timer_action', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 208,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_timer'",
      "line_content": "socket.socket.emit('set_timer', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 256,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "socket.socket.emit('quiz_timer_action', socketPayload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useTeacherQuizSocket.ts",
      "module": "frontend",
      "line": 264,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('update_tournament_code'",
      "line_content": "socket.socket.emit('update_tournament_code', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 210,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Student socket connection error:\"",
      "line_content": "logger.error(\"Student socket connection error:\", err);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 183,
      "column": 11,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "s.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 227,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_joined'",
      "line_content": "socket.on('game_joined', createSafeEventHandler<GameJoinedPayload>((payload) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 234,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_question'",
      "line_content": "socket.on('game_question', createSafeEventHandler<LiveQuestionPayload>((payload) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 262,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_state_update'",
      "line_content": "socket.on('game_state_update', createSafeEventHandler<GameStateUpdatePayload>((data) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 284,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('answer_received'",
      "line_content": "socket.on('answer_received', createSafeEventHandler<{",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 329,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('correct_answers'",
      "line_content": "socket.on('correct_answers', createSafeEventHandler<CorrectAnswersPayload>((payload) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 346,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('feedback'",
      "line_content": "socket.on('feedback', createSafeEventHandler<{",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 374,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_already_played'",
      "line_content": "socket.on('game_already_played', createSafeEventHandler<GameAlreadyPlayedPayload>(() => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 379,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_ended'",
      "line_content": "socket.on('game_ended', createSafeEventHandler<{ accessCode: string; endedAt?: string; score?: number; totalQuestions?: number; correct?: number; total?: number }>((payload) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 413,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket.emit('join_game', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 425,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "socket.emit('game_answer', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 437,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('request_next_question'",
      "line_content": "socket.emit('request_next_question', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useStudentGameSocket.ts",
      "module": "frontend",
      "line": 255,
      "column": 76,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'...'",
      "line_content": "questionText: payload.question.text.substring(0, 50) + '...'",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAccessGuard.ts",
      "module": "frontend",
      "line": 25,
      "column": 22,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "redirectTo = '/login',",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAccessGuard.ts",
      "module": "frontend",
      "line": 25,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "redirectTo = '/login',",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useGameTimer.ts",
      "module": "frontend",
      "line": 358,
      "column": 30,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('processing_timer_update_payload'",
      "line_content": "logTimerCalculation('processing_timer_update_payload', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useGameTimer.ts",
      "module": "frontend",
      "line": 374,
      "column": 30,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('calculated_timer_state'",
      "line_content": "logTimerCalculation('calculated_timer_state', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 45,
      "column": 60,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "return authContext.userState === 'anonymous' ? '/login' : '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 97,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "{ label: 'Se connecter', href: '/login', icon: 'LogIn' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 103,
      "column": 60,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join', icon: 'Users' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 104,
      "column": 58,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/practice/session'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/practice/session', icon: 'Dumbbell' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 111,
      "column": 58,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/practice/session'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/practice/session', icon: 'Dumbbell' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 112,
      "column": 60,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join', icon: 'Users' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 113,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game', icon: 'PlusCircle' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 114,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments', icon: 'ClipboardList' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 122,
      "column": 53,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/quiz/create'",
      "line_content": "{ label: 'Cr\u00e9er un quiz', href: '/teacher/quiz/create', icon: 'FilePlus' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 123,
      "column": 54,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/quiz/use'",
      "line_content": "{ label: 'Quiz existants', href: '/teacher/quiz/use', icon: 'ListChecks' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 124,
      "column": 49,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/results'",
      "line_content": "{ label: 'R\u00e9sultats', href: '/teacher/results', icon: 'Monitor' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 41,
      "column": 20,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "return '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 45,
      "column": 60,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "return authContext.userState === 'anonymous' ? '/login' : '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 45,
      "column": 71,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "return authContext.userState === 'anonymous' ? '/login' : '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 90,
      "column": 39,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Accueil', href: '/', icon: 'Home' }",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 97,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "{ label: 'Se connecter', href: '/login', icon: 'LogIn' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 103,
      "column": 60,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join', icon: 'Users' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 104,
      "column": 58,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/practice/session'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/practice/session', icon: 'Dumbbell' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 105,
      "column": 55,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login?mode=student'",
      "line_content": "{ label: 'Cr\u00e9er un compte', href: '/login?mode=student', icon: 'UserPlus', highlight: true },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 111,
      "column": 58,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/practice/session'",
      "line_content": "{ label: 'Entra\u00eenement libre', href: '/student/practice/session', icon: 'Dumbbell' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 112,
      "column": 60,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/join'",
      "line_content": "{ label: 'Rejoindre un tournoi', href: '/student/join', icon: 'Users' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 113,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/create-game'",
      "line_content": "{ label: 'Cr\u00e9er un tournoi', href: '/student/create-game', icon: 'PlusCircle' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 114,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/my-tournaments'",
      "line_content": "{ label: 'Mes tournois', href: '/my-tournaments', icon: 'ClipboardList' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 115,
      "column": 57,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login?mode=teacher'",
      "line_content": "{ label: 'Espace enseignant', href: '/login?mode=teacher', icon: 'BookOpen' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 121,
      "column": 55,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "{ label: 'Tableau de bord', href: '/', icon: 'BarChart2' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 122,
      "column": 53,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/quiz/create'",
      "line_content": "{ label: 'Cr\u00e9er un quiz', href: '/teacher/quiz/create', icon: 'FilePlus' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 123,
      "column": 54,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/quiz/use'",
      "line_content": "{ label: 'Quiz existants', href: '/teacher/quiz/use', icon: 'ListChecks' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useAuthState.ts",
      "module": "frontend",
      "line": 124,
      "column": 49,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/results'",
      "line_content": "{ label: 'R\u00e9sultats', href: '/teacher/results', icon: 'Monitor' },",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 159,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Enhanced student socket connection error:\"",
      "line_content": "logger.error(\"Enhanced student socket connection error:\", err);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 219,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('\u2705 Validated game_error event'",
      "line_content": "logger.error('\u2705 Validated game_error event', payload);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 265,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Standard game_error event'",
      "line_content": "logger.error('Standard game_error event', payload);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 142,
      "column": 11,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "s.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 187,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_joined'",
      "line_content": "middleware.on('game_joined', (payload: GameJoinedPayload) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 197,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_question'",
      "line_content": "middleware.on('game_question', (payload: QuestionData) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 210,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('timer_update'",
      "line_content": "middleware.on('timer_update', (payload: TimerUpdatePayload) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 243,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_joined'",
      "line_content": "socket.on('game_joined', (payload: GameJoinedPayload) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 252,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_question'",
      "line_content": "socket.on('game_question', (payload: QuestionData) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 287,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "validationMiddleware.emit('join_game', payload, SocketSchemas.joinGame);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 290,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket.emit('join_game', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 312,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "validationMiddleware.emit('game_answer', payload, SocketSchemas.gameAnswer);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useEnhancedStudentGameSocket.ts",
      "module": "frontend",
      "line": 315,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "socket.emit('game_answer', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 228,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Practice session error'",
      "line_content": "logger.error('Practice session error', payload);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 279,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Practice session socket connection error'",
      "line_content": "logger.error('Practice session socket connection error', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 346,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to create practice session socket'",
      "line_content": "logger.error('Failed to create practice session socket', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 371,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to start practice session'",
      "line_content": "logger.error('Failed to start practice session', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 397,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to submit answer'",
      "line_content": "logger.error('Failed to submit answer', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 417,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to get next question'",
      "line_content": "logger.error('Failed to get next question', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 437,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to retry question'",
      "line_content": "logger.error('Failed to retry question', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 457,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to end session'",
      "line_content": "logger.error('Failed to end session', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 476,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to get session state'",
      "line_content": "logger.error('Failed to get session state', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 496,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to request feedback'",
      "line_content": "logger.error('Failed to request feedback', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 268,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "socket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 299,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('PRACTICE_SESSION_CREATED'",
      "line_content": "socket.on('PRACTICE_SESSION_CREATED', handleSessionCreated);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 300,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('PRACTICE_QUESTION_READY'",
      "line_content": "socket.on('PRACTICE_QUESTION_READY', handleQuestionReady);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 301,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('PRACTICE_ANSWER_FEEDBACK'",
      "line_content": "socket.on('PRACTICE_ANSWER_FEEDBACK', handleAnswerFeedback);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 302,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('PRACTICE_SESSION_COMPLETED'",
      "line_content": "socket.on('PRACTICE_SESSION_COMPLETED', handleSessionCompleted);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 304,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('PRACTICE_SESSION_STATE'",
      "line_content": "socket.on('PRACTICE_SESSION_STATE', handleSessionState);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 307,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('correct_answers'",
      "line_content": "socket.on('correct_answers', (payload: { questionUid: string; correctAnswers?: boolean[] }) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 331,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('feedback'",
      "line_content": "socket.on('feedback', (payload: { questionUid: string; feedbackRemaining: number;[key: string]: any }) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 368,
      "column": 31,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('START_PRACTICE_SESSION'",
      "line_content": "socketRef.current.emit('START_PRACTICE_SESSION', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 394,
      "column": 31,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('SUBMIT_PRACTICE_ANSWER'",
      "line_content": "socketRef.current.emit('SUBMIT_PRACTICE_ANSWER', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 414,
      "column": 31,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('GET_NEXT_PRACTICE_QUESTION'",
      "line_content": "socketRef.current.emit('GET_NEXT_PRACTICE_QUESTION', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 434,
      "column": 31,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('RETRY_PRACTICE_QUESTION'",
      "line_content": "socketRef.current.emit('RETRY_PRACTICE_QUESTION', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 454,
      "column": 31,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('END_PRACTICE_SESSION'",
      "line_content": "socketRef.current.emit('END_PRACTICE_SESSION', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 473,
      "column": 31,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('GET_PRACTICE_SESSION_STATE'",
      "line_content": "socketRef.current.emit('GET_PRACTICE_SESSION_STATE', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 493,
      "column": 31,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('REQUEST_PRACTICE_FEEDBACK'",
      "line_content": "socketRef.current.emit('REQUEST_PRACTICE_FEEDBACK', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/usePracticeSession.ts",
      "module": "frontend",
      "line": 255,
      "column": 17,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 10000",
      "line_content": "timeout: 10000, // 10 second timeout for practice sessions",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useProjectionQuizSocket.ts",
      "module": "frontend",
      "line": 88,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('\u274c [PROJECTION] Error joining projection room:'",
      "line_content": "logger.error('\u274c [PROJECTION] Error joining projection room:', payload);",
      "fixable": false
    },
    {
      "file": "frontend/src/hooks/useProjectionQuizSocket.ts",
      "module": "frontend",
      "line": 91,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "socket.socket.on('connect', handleConnect);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useGameSocket.ts",
      "module": "frontend",
      "line": 177,
      "column": 19,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "newSocket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useGameSocket.ts",
      "module": "frontend",
      "line": 263,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "socket.emit('game_answer', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useGameSocket.ts",
      "module": "frontend",
      "line": 271,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket.emit('join_game', payload);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useGameSocket.ts",
      "module": "frontend",
      "line": 280,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_joined'",
      "line_content": "socket.on('game_joined', handler);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useGameSocket.ts",
      "module": "frontend",
      "line": 298,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "socket.emit('quiz_timer_action', {",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/useGameSocket.ts",
      "module": "frontend",
      "line": 315,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('timer_update'",
      "line_content": "socket.on('timer_update', handler as any);",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/useStudentGameSocket.emitters.test.ts",
      "module": "frontend",
      "line": 209,
      "column": 45,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('q1'",
      "line_content": "result.current.requestNextQuestion('q1');",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/useStudentGameSocket.emitters.test.ts",
      "module": "frontend",
      "line": 228,
      "column": 45,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('q2'",
      "line_content": "result.current.requestNextQuestion('q2');",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/timer-integration.test.ts",
      "module": "frontend",
      "line": 156,
      "column": 14,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 3000",
      "line_content": "}, { timeout: 3000 });",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/timer-integration.test.ts",
      "module": "frontend",
      "line": 212,
      "column": 14,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 3000",
      "line_content": "}, { timeout: 3000 });",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/timer-integration.test.ts",
      "module": "frontend",
      "line": 253,
      "column": 14,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 3000",
      "line_content": "}, { timeout: 3000 });",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/timer-integration.test.ts",
      "module": "frontend",
      "line": 292,
      "column": 14,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 3000",
      "line_content": "}, { timeout: 3000 });",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/timer-integration.test.ts",
      "module": "frontend",
      "line": 329,
      "column": 14,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 3000",
      "line_content": "}, { timeout: 3000 });",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/timer-integration.test.ts",
      "module": "frontend",
      "line": 382,
      "column": 18,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 2000",
      "line_content": "}, { timeout: 2000 });",
      "fixable": true
    },
    {
      "file": "frontend/src/hooks/__tests__/timer-countdown.test.ts",
      "module": "frontend",
      "line": 131,
      "column": 18,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 1000",
      "line_content": "}, { timeout: 1000 });",
      "fixable": true
    },
    {
      "file": "frontend/src/app/page.tsx",
      "module": "frontend",
      "line": 48,
      "column": 55,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "window.history.replaceState({}, document.title, '/');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/page.tsx",
      "module": "frontend",
      "line": 83,
      "column": 24,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/favicon.svg\"",
      "line_content": "<Image src=\"/favicon.svg\" alt=\"MathQuest logo\" width={64} height={64} priority />",
      "fixable": false
    },
    {
      "file": "frontend/src/app/layout.tsx",
      "module": "frontend",
      "line": 111,
      "column": 31,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/favicon.svg\"",
      "line_content": "<link rel=\"icon\" href=\"/favicon.svg\" type=\"image/svg+xml\" />",
      "fixable": false
    },
    {
      "file": "frontend/src/app/layout.tsx",
      "module": "frontend",
      "line": 112,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/favicon.svg\"",
      "line_content": "<link rel=\"alternate icon\" href=\"/favicon.svg\" type=\"image/svg+xml\" />",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 42,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "redirectTo: '/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 80,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Error loading filters\"",
      "line_content": "logger.error(\"Error loading filters\", err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 100,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Error loading disciplines\"",
      "line_content": "logger.error(\"Error loading disciplines\", err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 126,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Error loading themes\"",
      "line_content": "logger.error(\"Error loading themes\", err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 167,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Error checking question count\"",
      "line_content": "logger.error(\"Error checking question count\", err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 305,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Error creating tournament\"",
      "line_content": "logger.error(\"Error creating tournament\", err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 42,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "redirectTo: '/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 246,
      "column": 50,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/games'",
      "line_content": "const gameResponse = await fetch('/api/games', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/create-game/page.tsx",
      "module": "frontend",
      "line": 287,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/games'",
      "line_content": "const gameData = await fetch('/api/games', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/session/page.tsx",
      "module": "frontend",
      "line": 283,
      "column": 56,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/practice'",
      "line_content": "onClick={() => router.push('/student/practice')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/session/page.tsx",
      "module": "frontend",
      "line": 318,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/practice'",
      "line_content": "onClick={() => router.push('/student/practice')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/session/page.tsx",
      "module": "frontend",
      "line": 175,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to get next question'",
      "line_content": "logger.error('Failed to get next question', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/session/page.tsx",
      "module": "frontend",
      "line": 283,
      "column": 56,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/practice'",
      "line_content": "onClick={() => router.push('/student/practice')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/session/page.tsx",
      "module": "frontend",
      "line": 318,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/practice'",
      "line_content": "onClick={() => router.push('/student/practice')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page.tsx",
      "module": "frontend",
      "line": 84,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student'",
      "line_content": "onClick={() => router.push('/student')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page.tsx",
      "module": "frontend",
      "line": 119,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student'",
      "line_content": "onClick={() => router.push('/student')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page.tsx",
      "module": "frontend",
      "line": 39,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Failed to fetch game instance'",
      "line_content": "throw new Error('Failed to fetch game instance');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page.tsx",
      "module": "frontend",
      "line": 56,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error fetching game instance:'",
      "line_content": "logger.error('Error fetching game instance:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page.tsx",
      "module": "frontend",
      "line": 84,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student'",
      "line_content": "onClick={() => router.push('/student')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page.tsx",
      "module": "frontend",
      "line": 119,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student'",
      "line_content": "onClick={() => router.push('/student')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page_new.tsx",
      "module": "frontend",
      "line": 87,
      "column": 52,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student'",
      "line_content": "onClick={() => router.push('/student')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page_new.tsx",
      "module": "frontend",
      "line": 42,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Failed to fetch game instance'",
      "line_content": "throw new Error('Failed to fetch game instance');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page_new.tsx",
      "module": "frontend",
      "line": 59,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error fetching game instance:'",
      "line_content": "logger.error('Error fetching game instance:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/practice/[accessCode]/page_new.tsx",
      "module": "frontend",
      "line": 87,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student'",
      "line_content": "onClick={() => router.push('/student')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/join/page.tsx",
      "module": "frontend",
      "line": 59,
      "column": 88,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/join'",
      "line_content": "const data = await makeApiRequest<GameJoinResponse>('/api/games/' + code + '/join', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/join/page.tsx",
      "module": "frontend",
      "line": 59,
      "column": 65,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/games/'",
      "line_content": "const data = await makeApiRequest<GameJoinResponse>('/api/games/' + code + '/join', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/student/join/page.tsx",
      "module": "frontend",
      "line": 59,
      "column": 88,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/join'",
      "line_content": "const data = await makeApiRequest<GameJoinResponse>('/api/games/' + code + '/join', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/questions/count/route.ts",
      "module": "frontend",
      "line": 39,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error in questions count API:'",
      "line_content": "console.error('Error in questions count API:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/questions/filters/route.ts",
      "module": "frontend",
      "line": 44,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error in questions filters API:'",
      "line_content": "console.error('Error in questions filters API:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/questions/list/route.ts",
      "module": "frontend",
      "line": 35,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error in questions list API:'",
      "line_content": "console.error('Error in questions list API:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/route.ts",
      "module": "frontend",
      "line": 49,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('No JWT token found in cookies for authentication'",
      "line_content": "logger.error('No JWT token found in cookies for authentication');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/route.ts",
      "module": "frontend",
      "line": 84,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('[FRONTEND-API] /api/games error:'",
      "line_content": "console.error('[FRONTEND-API] /api/games error:', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/route.ts",
      "module": "frontend",
      "line": 90,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Game creation failed'",
      "line_content": "logger.error('Game creation failed', { error: error.message });",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/route.ts",
      "module": "frontend",
      "line": 45,
      "column": 58,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'...'",
      "line_content": "jwtTokenPrefix: jwtToken?.substring(0, 20) + '...' || 'none'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/access-code/[accessCode]/route.ts",
      "module": "frontend",
      "line": 43,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to fetch game instance by access code'",
      "line_content": "logger.error('Failed to fetch game instance by access code', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/teacher/active/route.ts",
      "module": "frontend",
      "line": 36,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Frontend API route error:'",
      "line_content": "console.error('Frontend API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/[gameId]/route.ts",
      "module": "frontend",
      "line": 72,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Failed to parse JSON response:'",
      "line_content": "console.error('Failed to parse JSON response:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/[gameId]/route.ts",
      "module": "frontend",
      "line": 86,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Frontend API route error:'",
      "line_content": "console.error('Frontend API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/games/[gameId]/status/route.ts",
      "module": "frontend",
      "line": 44,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Frontend API route error:'",
      "line_content": "console.error('Frontend API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/quiz/route.ts",
      "module": "frontend",
      "line": 86,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Quiz API route error:'",
      "line_content": "console.error('Quiz API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/quiz/route.ts",
      "module": "frontend",
      "line": 142,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Quiz API route error:'",
      "line_content": "console.error('Quiz API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/quiz/[quizId]/tournament-code/route.ts",
      "module": "frontend",
      "line": 32,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Tournament code API route error:'",
      "line_content": "console.error('Tournament code API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/quiz/[quizId]/tournament-code/route.ts",
      "module": "frontend",
      "line": 115,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Tournament code creation API route error:'",
      "line_content": "console.error('Tournament code creation API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/game-templates/route.ts",
      "module": "frontend",
      "line": 39,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Frontend API route error:'",
      "line_content": "console.error('Frontend API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/game-templates/route.ts",
      "module": "frontend",
      "line": 85,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Frontend API route error:'",
      "line_content": "console.error('Frontend API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/game-templates/[templateId]/route.ts",
      "module": "frontend",
      "line": 63,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Backend returned non-JSON response:'",
      "line_content": "console.error('Backend returned non-JSON response:', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/game-templates/[templateId]/route.ts",
      "module": "frontend",
      "line": 83,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Frontend API route error:'",
      "line_content": "console.error('Frontend API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/game-templates/[templateId]/instances/route.ts",
      "module": "frontend",
      "line": 49,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Backend returned non-JSON response:'",
      "line_content": "console.error('Backend returned non-JSON response:', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/game-templates/[templateId]/instances/route.ts",
      "module": "frontend",
      "line": 69,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Frontend API route error:'",
      "line_content": "console.error('Frontend API route error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/route.ts",
      "module": "frontend",
      "line": 43,
      "column": 27,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/status/route.ts",
      "module": "frontend",
      "line": 41,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('[Frontend Auth Status] Error calling backend:'",
      "line_content": "console.error('[Frontend Auth Status] Error calling backend:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/clear-cookies/route.ts",
      "module": "frontend",
      "line": 32,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/upgrade/route.ts",
      "module": "frontend",
      "line": 52,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Upgrade proxy error:'",
      "line_content": "console.error('Upgrade proxy error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/upgrade/route.ts",
      "module": "frontend",
      "line": 43,
      "column": 27,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/logout/route.ts",
      "module": "frontend",
      "line": 15,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/logout/route.ts",
      "module": "frontend",
      "line": 25,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/universal-login/route.ts",
      "module": "frontend",
      "line": 70,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Universal login proxy error:'",
      "line_content": "console.error('Universal login proxy error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/universal-login/route.ts",
      "module": "frontend",
      "line": 59,
      "column": 27,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/register/route.ts",
      "module": "frontend",
      "line": 52,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Register proxy error:'",
      "line_content": "console.error('Register proxy error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/register/route.ts",
      "module": "frontend",
      "line": 43,
      "column": 27,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/profile/route.ts",
      "module": "frontend",
      "line": 56,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Profile proxy error:'",
      "line_content": "console.error('Profile proxy error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/api/auth/profile/route.ts",
      "module": "frontend",
      "line": 47,
      "column": 27,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "path: '/',",
      "fixable": false
    },
    {
      "file": "frontend/src/app/socket-test/page.tsx",
      "module": "frontend",
      "line": 49,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "newSocket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/app/socket-test/page.tsx",
      "module": "frontend",
      "line": 65,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('pong'",
      "line_content": "newSocket.on('pong', (data) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/app/socket-test/page.tsx",
      "module": "frontend",
      "line": 89,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('ping'",
      "line_content": "socket.emit('ping', pingData);",
      "fixable": true
    },
    {
      "file": "frontend/src/app/login/page.tsx",
      "module": "frontend",
      "line": 94,
      "column": 35,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Avatar requis pour l\\'",
      "line_content": "if (!data.avatar) throw new Error('Avatar requis pour l\\'inscription');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/login/page.tsx",
      "module": "frontend",
      "line": 95,
      "column": 44,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Confirmation du mot de passe requise'",
      "line_content": "if (!data.confirmPassword) throw new Error('Confirmation du mot de passe requise');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/login/page.tsx",
      "module": "frontend",
      "line": 96,
      "column": 61,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Les mots de passe ne correspondent pas'",
      "line_content": "if (data.password !== data.confirmPassword) throw new Error('Les mots de passe ne correspondent pas');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/login/page.tsx",
      "module": "frontend",
      "line": 31,
      "column": 57,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "const redirectTo = searchParams?.get('redirect') || '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/app/login/page.tsx",
      "module": "frontend",
      "line": 46,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.push('/');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/login/page.tsx",
      "module": "frontend",
      "line": 328,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/\"",
      "line_content": "<Link href=\"/\" className=\"text-sm text-[color:var(--primary)] hover:underline flex items-center gap-1\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 225,
      "column": 25,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Error fetching game creator:\"",
      "line_content": "logger.error(\"Error fetching game creator:\", error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 236,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error(\"Error fetching tournament info:\"",
      "line_content": "logger.error(\"Error fetching tournament info:\", error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 320,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('No identity found, cannot join lobby. Redirecting to home.'",
      "line_content": "logger.error('No identity found, cannot join lobby. Redirecting to home.');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 489,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('redirect_to_game event received but no accessCode in payload:'",
      "line_content": "logger.error('redirect_to_game event received but no accessCode in payload:', payload);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 538,
      "column": 13,
      "type": "user_messages",
      "severity": "high",
      "description": "Hardcoded user-facing message",
      "matched_text": "alert(\"Lien copi\u00e9 dans le presse-papier !\"",
      "line_content": "alert(\"Lien copi\u00e9 dans le presse-papier !\");",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 284,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "socket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 65,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.push('/');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 71,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.push('/');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 321,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.push('/');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 434,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "window.location.href = '/';",
      "fixable": false
    },
    {
      "file": "frontend/src/app/lobby/[code]/page.tsx",
      "module": "frontend",
      "line": 443,
      "column": 28,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.replace('/'); // Redirect home on error",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/TeacherDashboardClient.tsx",
      "module": "frontend",
      "line": 19,
      "column": 29,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error loading quizzes:'",
      "line_content": ".catch((err) => console.error('Error loading quizzes:', err));",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/TeacherDashboardClient.tsx",
      "module": "frontend",
      "line": 24,
      "column": 29,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error loading quizzes:'",
      "line_content": ".catch((err) => console.error('Error loading quizzes:', err));",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/TeacherDashboardClient.tsx",
      "module": "frontend",
      "line": 17,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/quiz'",
      "line_content": "makeApiRequest<QuizListResponse>('/api/quiz', undefined, undefined, QuizListResponseSchema)",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/TeacherDashboardClient.tsx",
      "module": "frontend",
      "line": 22,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/quiz'",
      "line_content": "makeApiRequest<QuizListResponse>('/api/quiz', undefined, undefined, QuizListResponseSchema)",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/TeacherDashboardClient.tsx",
      "module": "frontend",
      "line": 32,
      "column": 71,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/quiz'",
      "line_content": "const result = await makeApiRequest<QuizCreationResponse>('/api/quiz', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/dashboard/[code]/page.tsx",
      "module": "frontend",
      "line": 52,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "redirectTo: '/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/dashboard/[code]/page.tsx",
      "module": "frontend",
      "line": 226,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Socket connection error:'",
      "line_content": "logger.error('Socket connection error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/dashboard/[code]/page.tsx",
      "module": "frontend",
      "line": 120,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "socket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "frontend/src/app/teacher/dashboard/[code]/page.tsx",
      "module": "frontend",
      "line": 161,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('quiz_connected_count'",
      "line_content": "socket.on('quiz_connected_count', (data: { count: number }) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/app/teacher/dashboard/[code]/page.tsx",
      "module": "frontend",
      "line": 166,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('dashboard_answer_stats_update'",
      "line_content": "socket.on('dashboard_answer_stats_update', (payload: any) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/app/teacher/dashboard/[code]/page.tsx",
      "module": "frontend",
      "line": 193,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('answer_stats_update'",
      "line_content": "socket.on('answer_stats_update', (payload: any) => {",
      "fixable": true
    },
    {
      "file": "frontend/src/app/teacher/dashboard/[code]/page.tsx",
      "module": "frontend",
      "line": 52,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "redirectTo: '/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/reset-password/[token]/page.tsx",
      "module": "frontend",
      "line": 54,
      "column": 29,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "router.push('/teacher/login');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/reset-password/[token]/page.tsx",
      "module": "frontend",
      "line": 57,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Password reset error:'",
      "line_content": "console.error('Password reset error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/reset-password/[token]/page.tsx",
      "module": "frontend",
      "line": 40,
      "column": 70,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth/reset-password/confirm'",
      "line_content": "const result = await makeApiRequest<{ message: string }>('/api/v1/auth/reset-password/confirm', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/reset-password/[token]/page.tsx",
      "module": "frontend",
      "line": 54,
      "column": 29,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "router.push('/teacher/login');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 635,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 934,
      "column": 40,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games/new\"",
      "line_content": "<Link href=\"/teacher/games/new\" className=\"btn-primary flex items-center gap-2 whitespace-nowrap\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 975,
      "column": 36,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games/new\"",
      "line_content": "<Link href=\"/teacher/games/new\" className=\"btn-primary flex items-center gap-2 whitespace-nowrap\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 1006,
      "column": 26,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games/new\"",
      "line_content": "href=\"/teacher/games/new\"",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 346,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error starting activity:'",
      "line_content": "console.error('Error starting activity:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 729,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching game instances:'",
      "line_content": "console.error('Error fetching game instances:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 347,
      "column": 13,
      "type": "user_messages",
      "severity": "high",
      "description": "Hardcoded user-facing message",
      "matched_text": "alert('Erreur lors du d\u00e9marrage de l\\'",
      "line_content": "alert('Erreur lors du d\u00e9marrage de l\\'activit\u00e9');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 635,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 686,
      "column": 17,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/game-templates'",
      "line_content": "'/api/game-templates'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 754,
      "column": 106,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/games'",
      "line_content": "const response = await makeApiRequest<{ gameInstance: { id: string, accessCode?: string } }>('/api/games', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 791,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/game-templates'",
      "line_content": "await makeApiRequest('/api/game-templates', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 934,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games/new\"",
      "line_content": "<Link href=\"/teacher/games/new\" className=\"btn-primary flex items-center gap-2 whitespace-nowrap\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 975,
      "column": 36,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games/new\"",
      "line_content": "<Link href=\"/teacher/games/new\" className=\"btn-primary flex items-center gap-2 whitespace-nowrap\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 1006,
      "column": 26,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games/new\"",
      "line_content": "href=\"/teacher/games/new\"",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/page.tsx",
      "module": "frontend",
      "line": 1018,
      "column": 90,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\". Voulez-vous supprimer l'",
      "line_content": "? `Il existe des sessions de jeu li\u00e9es \u00e0 \"${deleteModal.templateName}\". Voulez-vous supprimer l'activit\u00e9 ET toutes ses sessions ? Cette action est irr\u00e9versible.`",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 163,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 400,
      "column": 25,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/games'",
      "line_content": "router.push('/teacher/games');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 436,
      "column": 36,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<Link href=\"/teacher/games\" className=\"btn btn-outline\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 452,
      "column": 44,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<li><Link href=\"/teacher/games\">Mes activit\u00e9s</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 641,
      "column": 40,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<Link href=\"/teacher/games\" className=\"btn btn-outline btn-sm flex-1\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 269,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching game data:'",
      "line_content": "console.error('Error fetching game data:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 290,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching filters:'",
      "line_content": "console.error('Error fetching filters:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 312,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching questions:'",
      "line_content": "console.error('Error fetching questions:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 358,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Teacher ID is required'",
      "line_content": "throw new Error('Teacher ID is required');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 366,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Au moins une question est requise'",
      "line_content": "throw new Error('Au moins une question est requise');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 403,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error updating activity:'",
      "line_content": "console.error('Error updating activity:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 597,
      "column": 47,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "\"select select-bordered select-sm\"",
      "line_content": "className=\"select select-bordered select-sm\"",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 687,
      "column": 43,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "\"select select-bordered\"",
      "line_content": "className=\"select select-bordered\"",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 163,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 400,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/games'",
      "line_content": "router.push('/teacher/games');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 436,
      "column": 36,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<Link href=\"/teacher/games\" className=\"btn btn-outline\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 452,
      "column": 44,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<li><Link href=\"/teacher/games\">Mes activit\u00e9s</Link></li>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/[id]/edit/page.tsx",
      "module": "frontend",
      "line": 641,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<Link href=\"/teacher/games\" className=\"btn btn-outline btn-sm flex-1\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 105,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 449,
      "column": 40,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<Link href=\"/teacher/games\" className=\"btn-primary whitespace-nowrap min-w-[180px]\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 180,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error fetching dynamic filters:'",
      "line_content": "logger.error('Error fetching dynamic filters:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 270,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error fetching questions:'",
      "line_content": "logger.error('Error fetching questions:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 389,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Failed to create game template - no ID returned'",
      "line_content": "throw new Error('Failed to create game template - no ID returned');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 105,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 374,
      "column": 97,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/game-templates'",
      "line_content": "const gameTemplateResponse = await makeApiRequest<{ gameTemplate: { id: string } }>('/api/game-templates', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/games/new/page.tsx",
      "module": "frontend",
      "line": 449,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/games\"",
      "line_content": "<Link href=\"/teacher/games\" className=\"btn-primary whitespace-nowrap min-w-[180px]\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/use/page.tsx",
      "module": "frontend",
      "line": 18,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/use/page.tsx",
      "module": "frontend",
      "line": 53,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching quizzes:'",
      "line_content": "console.error('Error fetching quizzes:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/use/page.tsx",
      "module": "frontend",
      "line": 69,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching filters:'",
      "line_content": "console.error('Error fetching filters:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/use/page.tsx",
      "module": "frontend",
      "line": 18,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/create/page.tsx",
      "module": "frontend",
      "line": 21,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/create/page.tsx",
      "module": "frontend",
      "line": 65,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching filters:'",
      "line_content": "console.error('Error fetching filters:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/create/page.tsx",
      "module": "frontend",
      "line": 21,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/login'",
      "line_content": "redirectTo: '/teacher/login'",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/quiz/create/page.tsx",
      "module": "frontend",
      "line": 179,
      "column": 71,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/quiz'",
      "line_content": "const result = await makeApiRequest<QuizCreationResponse>('/api/quiz', {",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/projection/[gameCode]/page.tsx",
      "module": "frontend",
      "line": 100,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Invalid game instance data received'",
      "line_content": "throw new Error('Invalid game instance data received');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/projection/[gameCode]/page.tsx",
      "module": "frontend",
      "line": 111,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to fetch game details:'",
      "line_content": "logger.error('Failed to fetch game details:', error.message);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/projection/[gameCode]/page.tsx",
      "module": "frontend",
      "line": 256,
      "column": 29,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login?redirect='",
      "line_content": "router.push('/login?redirect=' + encodeURIComponent(window.location.pathname));",
      "fixable": false
    },
    {
      "file": "frontend/src/app/teacher/projection/[gameCode]/page.tsx",
      "module": "frontend",
      "line": 262,
      "column": 29,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login?redirect='",
      "line_content": "router.push('/login?redirect=' + encodeURIComponent(window.location.pathname));",
      "fixable": false
    },
    {
      "file": "frontend/src/app/profile/page.tsx",
      "module": "frontend",
      "line": 30,
      "column": 25,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "router.push('/login');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/profile/page.tsx",
      "module": "frontend",
      "line": 30,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "router.push('/login');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/profile/page.tsx",
      "module": "frontend",
      "line": 229,
      "column": 40,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/\"",
      "line_content": "<Link href=\"/\" className=\"text-sm text-[color:var(--primary)] hover:underline flex items-center gap-1\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 106,
      "column": 21,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "router.push('/login');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 204,
      "column": 64,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student/home'",
      "line_content": "onClick={() => router.push('/student/home')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 210,
      "column": 64,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/home'",
      "line_content": "onClick={() => router.push('/teacher/home')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 222,
      "column": 41,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/login\"",
      "line_content": "<a href=\"/login\" className=\"px-3 py-1 bg-orange-200 dark:bg-orange-800 text-center rounded hover:bg-orange-300\">Login</a>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 223,
      "column": 41,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/student/home\"",
      "line_content": "<a href=\"/student/home\" className=\"px-3 py-1 bg-orange-200 dark:bg-orange-800 text-center rounded hover:bg-orange-300\">Student Home</a>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 224,
      "column": 41,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/home\"",
      "line_content": "<a href=\"/teacher/home\" className=\"px-3 py-1 bg-orange-200 dark:bg-orange-800 text-center rounded hover:bg-orange-300\">Teacher Home</a>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 84,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('[Debug] Force clear error:'",
      "line_content": "console.error('[Debug] Force clear error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 98,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('[Debug] Check auth status error:'",
      "line_content": "console.error('[Debug] Check auth status error:', error);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 106,
      "column": 21,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "router.push('/login');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 130,
      "column": 106,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'...'",
      "line_content": "<strong>{key}:</strong> {value.substring(0, 30)}{value.length > 30 ? '...' : ''}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 192,
      "column": 64,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "onClick={() => router.push('/')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 204,
      "column": 64,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student/home'",
      "line_content": "onClick={() => router.push('/student/home')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 210,
      "column": 64,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/home'",
      "line_content": "onClick={() => router.push('/teacher/home')}",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 221,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/\"",
      "line_content": "<a href=\"/\" className=\"px-3 py-1 bg-orange-200 dark:bg-orange-800 text-center rounded hover:bg-orange-300\">Home</a>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 222,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/login\"",
      "line_content": "<a href=\"/login\" className=\"px-3 py-1 bg-orange-200 dark:bg-orange-800 text-center rounded hover:bg-orange-300\">Login</a>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 223,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/student/home\"",
      "line_content": "<a href=\"/student/home\" className=\"px-3 py-1 bg-orange-200 dark:bg-orange-800 text-center rounded hover:bg-orange-300\">Student Home</a>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 224,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/home\"",
      "line_content": "<a href=\"/teacher/home\" className=\"px-3 py-1 bg-orange-200 dark:bg-orange-800 text-center rounded hover:bg-orange-300\">Teacher Home</a>",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 234,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/api/auth/status\"",
      "line_content": "href=\"/api/auth/status\"",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/page.tsx",
      "module": "frontend",
      "line": 241,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/api/auth/clear-cookies\"",
      "line_content": "href=\"/api/auth/clear-cookies\"",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug/timer/page.tsx",
      "module": "frontend",
      "line": 78,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('debug-question-1'",
      "line_content": "emitSetQuestion('debug-question-1', 20);",
      "fixable": true
    },
    {
      "file": "frontend/src/app/debug-cookies/page.tsx",
      "module": "frontend",
      "line": 28,
      "column": 27,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error fetching server cookies:'",
      "line_content": ".catch(err => console.error('Error fetching server cookies:', err));",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug-cookies/page.tsx",
      "module": "frontend",
      "line": 25,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/debug-cookies'",
      "line_content": "fetch('/api/debug-cookies')",
      "fixable": false
    },
    {
      "file": "frontend/src/app/live/[code]/page.tsx",
      "module": "frontend",
      "line": 63,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.push('/');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/live/[code]/page.tsx",
      "module": "frontend",
      "line": 69,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.push('/');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/leaderboard/[code]/page.tsx",
      "module": "frontend",
      "line": 48,
      "column": 52,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Tournoi introuvable ou non v\u00e9rifi\u00e9'",
      "line_content": "if (!tournoi || !tournoi.verified) throw new Error('Tournoi introuvable ou non v\u00e9rifi\u00e9');",
      "fixable": false
    },
    {
      "file": "frontend/src/app/leaderboard/[code]/page.tsx",
      "module": "frontend",
      "line": 63,
      "column": 25,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error checking differed play availability:'",
      "line_content": "console.error('Error checking differed play availability:', err);",
      "fixable": false
    },
    {
      "file": "frontend/src/app/leaderboard/[code]/page.tsx",
      "module": "frontend",
      "line": 89,
      "column": 13,
      "type": "user_messages",
      "severity": "high",
      "description": "Hardcoded user-facing message",
      "matched_text": "alert(\"Lien du classement copi\u00e9 dans le presse-papier !\"",
      "line_content": "alert(\"Lien du classement copi\u00e9 dans le presse-papier !\");",
      "fixable": false
    },
    {
      "file": "frontend/src/app/leaderboard/[code]/page.tsx",
      "module": "frontend",
      "line": 105,
      "column": 36,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/\"",
      "line_content": "<Link href=\"/\" className=\"text-primary underline hover:text-primary/80 font-semibold\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug-auth/page.tsx",
      "module": "frontend",
      "line": 59,
      "column": 33,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/login\"",
      "line_content": "<a href=\"/login\" className=\"btn btn-primary\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug-auth/page.tsx",
      "module": "frontend",
      "line": 62,
      "column": 33,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "\"/teacher/login\"",
      "line_content": "<a href=\"/teacher/login\" className=\"btn btn-secondary\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug-auth/page.tsx",
      "module": "frontend",
      "line": 59,
      "column": 33,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/login\"",
      "line_content": "<a href=\"/login\" className=\"btn btn-primary\">",
      "fixable": false
    },
    {
      "file": "frontend/src/app/debug-auth/page.tsx",
      "module": "frontend",
      "line": 62,
      "column": 33,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"/teacher/login\"",
      "line_content": "<a href=\"/teacher/login\" className=\"btn btn-secondary\">",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 10,
      "column": 34,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api'",
      "line_content": "export const FRONTEND_API_BASE = '/api';",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 14,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/universal-login'",
      "line_content": "LOGIN: '/api/auth/universal-login',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 15,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/logout'",
      "line_content": "LOGOUT: '/api/auth/logout',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 16,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/status'",
      "line_content": "STATUS: '/api/auth/status',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 17,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/register'",
      "line_content": "REGISTER: '/api/auth/register',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 18,
      "column": 14,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/profile'",
      "line_content": "PROFILE: '/api/auth/profile',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 19,
      "column": 14,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/upgrade'",
      "line_content": "UPGRADE: '/api/auth/upgrade',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 20,
      "column": 29,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth/reset-password/confirm'",
      "line_content": "RESET_PASSWORD_CONFIRM: '/api/v1/auth/reset-password/confirm',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 21,
      "column": 20,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/auth/clear-cookies'",
      "line_content": "CLEAR_COOKIES: '/api/auth/clear-cookies'",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 58,
      "column": 14,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/debug-cookies'",
      "line_content": "COOKIES: '/api/debug-cookies',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 95,
      "column": 11,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "PATH: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 96,
      "column": 16,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "NAMESPACE: '/'",
      "fixable": false
    },
    {
      "file": "frontend/src/constants/api.ts",
      "module": "frontend",
      "line": 88,
      "column": 5,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "TIMEOUT: 10000",
      "line_content": "TIMEOUT: 10000, // 10 seconds",
      "fixable": true
    },
    {
      "file": "backend/debug-jwt.ts",
      "module": "backend",
      "line": 49,
      "column": 50,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "const [header, payload, signature] = token.split('.');",
      "fixable": false
    },
    {
      "file": "backend/src/server.ts",
      "module": "backend",
      "line": 47,
      "column": 9,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/health'",
      "line_content": "app.get('/health', (req: Request, res: Response) => {",
      "fixable": false
    },
    {
      "file": "backend/src/server.ts",
      "module": "backend",
      "line": 52,
      "column": 9,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api'",
      "line_content": "app.use('/api', (req: Request, res: Response, next: NextFunction) => {",
      "fixable": false
    },
    {
      "file": "backend/src/server.ts",
      "module": "backend",
      "line": 53,
      "column": 29,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/socket.io'",
      "line_content": "if (req.path.startsWith('/socket.io')) { // req.path is relative to the mount point '/api'",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 25,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('User with this email already exists'",
      "line_content": "throw new Error('User with this email already exists');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 98,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Invalid email or password'",
      "line_content": "throw new Error('Invalid email or password');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 102,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Invalid email or password'",
      "line_content": "throw new Error('Invalid email or password');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 203,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('If this email exists, a reset link has been sent'",
      "line_content": "throw new Error('If this email exists, a reset link has been sent');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 231,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Token and new password are required'",
      "line_content": "throw new Error('Token and new password are required');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 235,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Password must be at least 6 characters long'",
      "line_content": "throw new Error('Password must be at least 6 characters long');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 248,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Invalid or expired reset token'",
      "line_content": "throw new Error('Invalid or expired reset token');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 278,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Email and password are required'",
      "line_content": "throw new Error('Email and password are required');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 282,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Password must be at least 6 characters long'",
      "line_content": "throw new Error('Password must be at least 6 characters long');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 288,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Invalid email format'",
      "line_content": "throw new Error('Invalid email format');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 310,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Email already exists'",
      "line_content": "throw new Error('Email already exists');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/userService.ts",
      "module": "backend",
      "line": 378,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Username is required'",
      "line_content": "throw new Error('Username is required');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/gameTemplateService.ts",
      "module": "backend",
      "line": 57,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('No questions found for the selected filters'",
      "line_content": "throw new Error('No questions found for the selected filters');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/practiceSessionService.ts",
      "module": "backend",
      "line": 78,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('No questions found for the specified criteria'",
      "line_content": "throw new Error('No questions found for the specified criteria');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/practiceSessionService.ts",
      "module": "backend",
      "line": 179,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Practice session not found'",
      "line_content": "throw new Error('Practice session not found');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/practiceSessionService.ts",
      "module": "backend",
      "line": 183,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Practice session is not active'",
      "line_content": "throw new Error('Practice session is not active');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/practiceSessionService.ts",
      "module": "backend",
      "line": 187,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('No current question available'",
      "line_content": "throw new Error('No current question available');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/practiceSessionService.ts",
      "module": "backend",
      "line": 266,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Practice session not found'",
      "line_content": "throw new Error('Practice session not found');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/practiceSessionService.ts",
      "module": "backend",
      "line": 364,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Failed to generate question pool'",
      "line_content": "throw new Error('Failed to generate question pool');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/gameParticipantService.ts",
      "module": "backend",
      "line": 200,
      "column": 29,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Failed to join game: participant creation failed'",
      "line_content": "throw new Error('Failed to join game: participant creation failed');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/gameParticipantService.ts",
      "module": "backend",
      "line": 209,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to fetch participant immediately after creation'",
      "line_content": "logger.error('Failed to fetch participant immediately after creation');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/gameInstanceService.ts",
      "module": "backend",
      "line": 377,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error generating access code:'",
      "line_content": "logger.error('Error generating access code:', error);",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/gameInstanceService.ts",
      "module": "backend",
      "line": 378,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Unable to generate unique access code'",
      "line_content": "throw new Error('Unable to generate unique access code');",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/gameInstanceService.ts",
      "module": "backend",
      "line": 409,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error fetching teacher active games:'",
      "line_content": "logger.error('Error fetching teacher active games:', error);",
      "fixable": false
    },
    {
      "file": "backend/src/core/services/gameInstanceService.ts",
      "module": "backend",
      "line": 482,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('You do not have permission to delete this game instance'",
      "line_content": "throw new Error('You do not have permission to delete this game instance');",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 2305,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 3425,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 4443,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 5676,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 6827,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 7969,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 9197,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/index.d.ts",
      "module": "backend",
      "line": 10428,
      "column": 80,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".`\n            : [\n                Error,\n                '",
      "line_content": "? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/client.d.ts",
      "module": "backend",
      "line": 1,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"./index\"",
      "line_content": "export * from \"./index\"",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/edge.d.ts",
      "module": "backend",
      "line": 1,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"./default\"",
      "line_content": "export * from \"./default\"",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/default.d.ts",
      "module": "backend",
      "line": 1,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"./index\"",
      "line_content": "export * from \"./index\"",
      "fixable": false
    },
    {
      "file": "backend/src/db/generated/client/wasm.d.ts",
      "module": "backend",
      "line": 1,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"./index\"",
      "line_content": "export * from \"./index\"",
      "fixable": false
    },
    {
      "file": "backend/src/api/index.ts",
      "module": "backend",
      "line": 8,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/v1'",
      "line_content": "router.use('/v1', v1Router);",
      "fixable": false
    },
    {
      "file": "backend/src/api/index.ts",
      "module": "backend",
      "line": 8,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/v1'",
      "line_content": "router.use('/v1', v1Router);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 119,
      "column": 41,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "io.to(`game_${accessCode}`).emit('game_question', {",
      "fixable": true
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 133,
      "column": 65,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_control_question_set'",
      "line_content": "io.to(`teacher_control_${updatedGameState.gameId}`).emit('game_control_question_set', {",
      "fixable": true
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 202,
      "column": 41,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('question_ended'",
      "line_content": "io.to(`game_${accessCode}`).emit('question_ended', {",
      "fixable": true
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 209,
      "column": 45,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('leaderboard_update'",
      "line_content": "io.to(`game_${accessCode}`).emit('leaderboard_update', {",
      "fixable": true
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 215,
      "column": 65,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_control_question_ended'",
      "line_content": "io.to(`teacher_control_${updatedGameState.gameId}`).emit('game_control_question_ended', {",
      "fixable": true
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 276,
      "column": 41,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_ended'",
      "line_content": "io.to(`game_${accessCode}`).emit('game_ended', {",
      "fixable": true
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 32,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:accessCode'",
      "line_content": "router.get('/:accessCode', teacherAuth, async (req: Request, res: Response<GameControlStateResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 76,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:accessCode/question'",
      "line_content": "router.post('/:accessCode/question', teacherAuth, validateRequestBody(SetQuestionRequestSchema), async (req: Request<{ accessCode: string }, QuestionSetResponse | ErrorResponse, SetQuestionRequest>, res: Response<QuestionSetResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 156,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:accessCode/end-question'",
      "line_content": "router.post('/:accessCode/end-question', teacherAuth, async (req: Request, res: Response<QuestionEndedResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameControl.ts",
      "module": "backend",
      "line": 238,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:accessCode/end-game'",
      "line_content": "router.post('/:accessCode/end-game', teacherAuth, async (req: Request, res: Response<GameEndedResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 77,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/filters'",
      "line_content": "router.get('/filters', async (req: Request, res: Response<any>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 113,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/list'",
      "line_content": "router.get('/list', async (req: Request, res: Response<string[] | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 44,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.post('/', teacherAuth, validateRequestBody(CreateQuestionRequestSchema), async (req: Request<{}, { question: any } | ErrorResponse, QuestionCreationRequest>, res: Response<{ question: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 77,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/filters'",
      "line_content": "router.get('/filters', async (req: Request, res: Response<any>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 113,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/list'",
      "line_content": "router.get('/list', async (req: Request, res: Response<string[] | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 151,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:uid'",
      "line_content": "router.get('/:uid', optionalAuth, async (req: Request, res: Response<{ question: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 180,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.get('/', teacherAuth, async (req: Request, res: Response<{ questions: any[], total: number, page: number, pageSize: number, totalPages: number } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 302,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:uid'",
      "line_content": "router.put('/:uid', teacherAuth, validateRequestBody(UpdateQuestionRequestSchema), async (req: Request, res: Response<{ question: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/questions.ts",
      "module": "backend",
      "line": 341,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:uid'",
      "line_content": "router.delete('/:uid', teacherAuth, async (req: Request, res: Response<{ success: boolean, message: string } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 501,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teacher/active'",
      "line_content": "router.get('/teacher/active', teacherAuth, async (req: Request, res: Response) => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 419,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to fetch leaderboard'",
      "line_content": "logger.error('Failed to fetch leaderboard', error);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 495,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Failed to fetch comprehensive game state'",
      "line_content": "logger.error('Failed to fetch comprehensive game state', { accessCode: code, error: err });",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 69,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.post('/', optionalAuth, validateRequestBody(CreateGameRequestSchema), async (req: Request<{}, GameCreationResponse | ErrorResponse, GameCreationRequest>, res: Response<GameCreationResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 180,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:accessCode'",
      "line_content": "router.get('/:accessCode', async (req: Request, res: Response<GameInstanceResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 210,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/id/:id'",
      "line_content": "router.get('/id/:id', teacherAuth, async (req: Request, res: Response<GameInstanceResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 246,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:accessCode/join'",
      "line_content": "router.post('/:accessCode/join', validateRequestBody(GameJoinRequestSchema), async (req: Request<{ accessCode: string }, GameJoinResponse | ErrorResponse, GameJoinRequest>, res: Response<GameJoinResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 284,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/status'",
      "line_content": "router.put('/:id/status', optionalAuth, validateRequestBody(GameStatusUpdateRequestSchema), async (req: Request, res: Response<GameStatusUpdateResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 331,
      "column": 14,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/status'",
      "line_content": "router.patch('/:id/status', optionalAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 382,
      "column": 14,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/differed'",
      "line_content": "router.patch('/:id/differed', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 402,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:code/leaderboard'",
      "line_content": "router.get('/:code/leaderboard', async (req: Request, res: Response<LeaderboardResponse | ErrorResponse>) => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 430,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:code/state'",
      "line_content": "router.get('/:code/state', async (req: Request, res: Response) => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 501,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teacher/active'",
      "line_content": "router.get('/teacher/active', teacherAuth, async (req: Request, res: Response) => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 520,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/instance/:id/edit'",
      "line_content": "router.get('/instance/:id/edit', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 556,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/instance/:id'",
      "line_content": "router.put('/instance/:id', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 604,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/template/:templateId/instances'",
      "line_content": "router.get('/template/:templateId/instances', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/games.ts",
      "module": "backend",
      "line": 633,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.delete('/:id', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/players.ts",
      "module": "backend",
      "line": 36,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/cookie/:cookieId'",
      "line_content": "router.get('/cookie/:cookieId', async (req: Request, res: Response<UserByCookieResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/teachers.ts",
      "module": "backend",
      "line": 34,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/profile'",
      "line_content": "router.get('/profile', teacherAuth, async (req: Request, res: Response<{ user: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/teachers.ts",
      "module": "backend",
      "line": 34,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/profile'",
      "line_content": "router.get('/profile', teacherAuth, async (req: Request, res: Response<{ user: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 42,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.post('/', teacherAuth, validateRequestBody(CreateQuizTemplateRequestSchema), async (req: Request<{}, { gameTemplate: any } | ErrorResponse, GameTemplateCreationRequest>, res: Response<{ gameTemplate: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 90,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.get('/:id', teacherAuth, async (req: Request, res: Response<{ gameTemplate: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 125,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.get('/', teacherAuth, async (req: Request, res: Response<{ gameTemplates: any[], total: number, page: number, pageSize: any, totalPages: number } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 176,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.put('/:id', teacherAuth, validateRequestBody(UpdateQuizTemplateRequestSchema), async (req: Request<{ id: string }, { gameTemplate: any } | ErrorResponse, GameTemplateUpdateRequest>, res: Response<{ gameTemplate: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 183,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.delete('/:id', teacherAuth, async (req: Request, res: Response<{ success: boolean, message: string } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 190,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/questions'",
      "line_content": "router.post('/:id/questions', teacherAuth, async (req: Request, res: Response<{ gameTemplate: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 197,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/questions/:questionUid'",
      "line_content": "router.delete('/:id/questions/:questionUid', teacherAuth, async (req: Request, res: Response<{ success: boolean, message: string } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 204,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/questions-sequence'",
      "line_content": "router.put('/:id/questions-sequence', teacherAuth, async (req: Request, res: Response<{ gameTemplate: any } | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 245,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.delete('/:id', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 279,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/questions'",
      "line_content": "router.post('/:id/questions', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 324,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/questions/:questionUid'",
      "line_content": "router.delete('/:id/questions/:questionUid', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/quizTemplates.ts",
      "module": "backend",
      "line": 362,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id/questions-sequence'",
      "line_content": "router.put('/:id/questions-sequence', teacherAuth, async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/users.ts",
      "module": "backend",
      "line": 24,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:userId'",
      "line_content": "router.get('/:userId', optionalAuth, async (req: Request, res: Response<PublicUser | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/student.ts",
      "module": "backend",
      "line": 32,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.post('/', async (req: Request, res: Response<RegisterResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameTemplates.ts",
      "module": "backend",
      "line": 203,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('User ID is missing from authenticated request. This should not happen if auth middleware is effective.'",
      "line_content": "logger.error('User ID is missing from authenticated request. This should not happen if auth middleware is effective.');",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameTemplates.ts",
      "module": "backend",
      "line": 38,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.get('/', async (req: Request, res: Response<GameTemplatesResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameTemplates.ts",
      "module": "backend",
      "line": 80,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.get('/:id', async (req: Request, res: Response<GameTemplateResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameTemplates.ts",
      "module": "backend",
      "line": 131,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.post('/', validateRequestBody(CreateGameTemplateRequestSchema), async (req: Request<{}, GameTemplateCreationResponse | ErrorResponse, GameTemplateCreationRequest>, res: Response<GameTemplateCreationResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameTemplates.ts",
      "module": "backend",
      "line": 263,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.put('/:id', validateRequestBody(UpdateGameTemplateRequestSchema), async (req: Request<{ id: string }, GameTemplateUpdateResponse | ErrorResponse, GameTemplateUpdateRequest>, res: Response<GameTemplateUpdateResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/gameTemplates.ts",
      "module": "backend",
      "line": 316,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:id'",
      "line_content": "router.delete('/:id', async (req: Request, res: Response<void | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 348,
      "column": 13,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/register'",
      "line_content": "router.post('/register', validateRequestBody(RegisterRequestSchema), async (req: Request, res: Response<RegisterResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 518,
      "column": 13,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/upgrade'",
      "line_content": "router.post('/upgrade', validateRequestBody(UpgradeAccountRequestSchema), async (req: Request, res: Response<UpgradeAccountResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 665,
      "column": 13,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/login'",
      "line_content": "router.post('/login', async (req: Request, res: Response<LoginResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 673,
      "column": 13,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/reset-password'",
      "line_content": "router.post('/reset-password', validateRequestBody(PasswordResetRequestSchema), async (req: Request, res: Response<PasswordResetResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 709,
      "column": 13,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/reset-password/confirm'",
      "line_content": "router.post('/reset-password/confirm', validateRequestBody(PasswordResetConfirmRequestSchema), async (req: Request, res: Response<PasswordResetConfirmResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 754,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/status'",
      "line_content": "router.get('/status', optionalAuth, async (req: Request, res: Response<AuthStatusResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 837,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/profile'",
      "line_content": "router.put('/profile', optionalAuth, validateRequestBody(ProfileUpdateRequestSchema), async (req: Request, res: Response<ProfileUpdateResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 60,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.post('/', validateRequestBody(LoginRequestSchema.or(RegisterRequestSchema)), async (req: Request, res: Response<LoginResponse | RegisterResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 348,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/register'",
      "line_content": "router.post('/register', validateRequestBody(RegisterRequestSchema), async (req: Request, res: Response<RegisterResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 518,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/upgrade'",
      "line_content": "router.post('/upgrade', validateRequestBody(UpgradeAccountRequestSchema), async (req: Request, res: Response<UpgradeAccountResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 665,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/login'",
      "line_content": "router.post('/login', async (req: Request, res: Response<LoginResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 673,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/reset-password'",
      "line_content": "router.post('/reset-password', validateRequestBody(PasswordResetRequestSchema), async (req: Request, res: Response<PasswordResetResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 709,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/reset-password/confirm'",
      "line_content": "router.post('/reset-password/confirm', validateRequestBody(PasswordResetConfirmRequestSchema), async (req: Request, res: Response<PasswordResetConfirmResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 754,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/status'",
      "line_content": "router.get('/status', optionalAuth, async (req: Request, res: Response<AuthStatusResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/auth.ts",
      "module": "backend",
      "line": 837,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/profile'",
      "line_content": "router.put('/profile', optionalAuth, validateRequestBody(ProfileUpdateRequestSchema), async (req: Request, res: Response<ProfileUpdateResponse | ErrorResponse>): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 19,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/auth'",
      "line_content": "router.use('/auth', authRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 22,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/teachers'",
      "line_content": "router.use('/teachers', teachersRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 25,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/players'",
      "line_content": "router.use('/players', playersRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 28,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/game-templates'",
      "line_content": "router.use('/game-templates', teacherAuth, gameTemplatesRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 31,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/quiz-templates'",
      "line_content": "router.use('/quiz-templates', teacherAuth, quizTemplatesRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 34,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/games'",
      "line_content": "router.use('/games', gamesRouter); // Re-enabled gamesRouter mounting",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 37,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/game-control'",
      "line_content": "router.use('/game-control', gameControlRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 40,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/questions'",
      "line_content": "router.use('/questions', questionsRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 43,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/student'",
      "line_content": "router.use('/student', studentRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 46,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/users'",
      "line_content": "router.use('/users', usersRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 49,
      "column": 12,
      "type": "api_endpoints",
      "severity": "medium",
      "description": "Hardcoded API endpoint",
      "matched_text": "'/practice/sessions'",
      "line_content": "router.use('/practice/sessions', practiceSessionsRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 19,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/auth'",
      "line_content": "router.use('/auth', authRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 22,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/teachers'",
      "line_content": "router.use('/teachers', teachersRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 25,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/players'",
      "line_content": "router.use('/players', playersRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 28,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/game-templates'",
      "line_content": "router.use('/game-templates', teacherAuth, gameTemplatesRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 31,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/quiz-templates'",
      "line_content": "router.use('/quiz-templates', teacherAuth, quizTemplatesRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 34,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/games'",
      "line_content": "router.use('/games', gamesRouter); // Re-enabled gamesRouter mounting",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 37,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/game-control'",
      "line_content": "router.use('/game-control', gameControlRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 40,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/questions'",
      "line_content": "router.use('/questions', questionsRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 43,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/student'",
      "line_content": "router.use('/student', studentRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 46,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/users'",
      "line_content": "router.use('/users', usersRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/index.ts",
      "module": "backend",
      "line": 49,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/practice/sessions'",
      "line_content": "router.use('/practice/sessions', practiceSessionsRouter);",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/practice/sessions.ts",
      "module": "backend",
      "line": 21,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/'",
      "line_content": "router.post('/', validateRequestBody(CreatePracticeSessionRequestSchema), async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/practice/sessions.ts",
      "module": "backend",
      "line": 59,
      "column": 12,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:sessionId'",
      "line_content": "router.get('/:sessionId', async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/api/v1/practice/sessions.ts",
      "module": "backend",
      "line": 108,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/:sessionId'",
      "line_content": "router.delete('/:sessionId', async (req: Request, res: Response): Promise<void> => {",
      "fixable": false
    },
    {
      "file": "backend/src/middleware/validation.ts",
      "module": "backend",
      "line": 16,
      "column": 30,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/game-templates'",
      "line_content": "if (req.path === '/api/v1/game-templates' && req.method === 'POST') {",
      "fixable": false
    },
    {
      "file": "backend/src/middleware/validation.ts",
      "module": "backend",
      "line": 29,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "field: err.path.join('.'),",
      "fixable": false
    },
    {
      "file": "backend/src/middleware/validation.ts",
      "module": "backend",
      "line": 68,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "field: err.path.join('.'),",
      "fixable": false
    },
    {
      "file": "backend/src/middleware/validation.ts",
      "module": "backend",
      "line": 104,
      "column": 42,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'.'",
      "line_content": "field: err.path.join('.'),",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/index.ts",
      "module": "backend",
      "line": 40,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/handlers/tournamentHandler.ts",
      "module": "backend",
      "line": 167,
      "column": 25,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_starting'",
      "line_content": "io.to(liveRoom).emit('tournament_starting', { countdown: countdownDuration }); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/tournamentHandler.ts",
      "module": "backend",
      "line": 168,
      "column": 26,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_starting'",
      "line_content": "io.to(lobbyRoom).emit('tournament_starting', { countdown: countdownDuration }); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/tournamentHandler.ts",
      "module": "backend",
      "line": 173,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('countdown_tick'",
      "line_content": "io.to(liveRoom).emit('countdown_tick', { countdown: i }); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/tournamentHandler.ts",
      "module": "backend",
      "line": 174,
      "column": 30,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('countdown_tick'",
      "line_content": "io.to(lobbyRoom).emit('countdown_tick', { countdown: i }); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/tournamentHandler.ts",
      "module": "backend",
      "line": 179,
      "column": 25,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('countdown_complete'",
      "line_content": "io.to(liveRoom).emit('countdown_complete'); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/tournamentHandler.ts",
      "module": "backend",
      "line": 180,
      "column": 26,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('countdown_complete'",
      "line_content": "io.to(lobbyRoom).emit('countdown_complete'); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 151,
      "column": 28,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "socket.emit('game_question', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 170,
      "column": 32,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_timer_updated'",
      "line_content": "socket.emit('game_timer_updated', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 211,
      "column": 32,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('correct_answers'",
      "line_content": "socket.emit('correct_answers', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 218,
      "column": 32,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('feedback'",
      "line_content": "socket.emit('feedback', { questionUid: questionUid, feedbackRemaining: safeFeedbackRemaining } as { questionUid: string; feedbackRemaining: number }); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 224,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_joined'",
      "line_content": "socket.emit('game_joined', gameJoinedPayload as GameJoinedPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 230,
      "column": 21,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('participant_joined'",
      "line_content": "io.to(room).emit('participant_joined', { userId, username: participantUsername, avatarEmoji: participantAvatarEmoji, playMode });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 284,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 329,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 341,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 351,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 372,
      "column": 28,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 384,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 424,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 462,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', { status: 'ok', questionUid, scoreAwarded: score });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 467,
      "column": 62,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_answer_update'",
      "line_content": "io.to(`teacher_control_${gameState.gameId}`).emit('quiz_answer_update', collected);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 471,
      "column": 25,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('leaderboard_update'",
      "line_content": "io.to(room).emit('leaderboard_update', { leaderboard } as { leaderboard: ParticipantData[] });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedLiveHandler.ts",
      "module": "backend",
      "line": 475,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_feedback'",
      "line_content": "socket.emit('answer_feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/projectorHandler.ts",
      "module": "backend",
      "line": 64,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error fetching game state for projector'",
      "line_content": "logger.error('Error fetching game state for projector', err);",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/handlers/projectorHandler.ts",
      "module": "backend",
      "line": 124,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Error broadcasting projector state'",
      "line_content": "logger.error('Error broadcasting projector state', err);",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/handlers/sharedGameFlow.ts",
      "module": "backend",
      "line": 93,
      "column": 41,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "io.to(`game_${accessCode}`).emit('game_question', gameQuestionPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedGameFlow.ts",
      "module": "backend",
      "line": 109,
      "column": 41,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_timer_updated'",
      "line_content": "io.to(`game_${accessCode}`).emit('game_timer_updated', gameTimerUpdatePayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedGameFlow.ts",
      "module": "backend",
      "line": 120,
      "column": 41,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('correct_answers'",
      "line_content": "io.to(`game_${accessCode}`).emit('correct_answers', correctAnswersPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedGameFlow.ts",
      "module": "backend",
      "line": 165,
      "column": 45,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('feedback'",
      "line_content": "io.to(`game_${accessCode}`).emit('feedback', feedbackPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/sharedGameFlow.ts",
      "module": "backend",
      "line": 183,
      "column": 37,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_ended'",
      "line_content": "io.to(`game_${accessCode}`).emit('game_ended', gameEndedPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/disconnectHandler.ts",
      "module": "backend",
      "line": 69,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('player_left_game'",
      "line_content": "io.to(currentGameRoom).emit('player_left_game', playerLeftPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/practiceSessionHandler.ts",
      "module": "backend",
      "line": 222,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('correct_answers'",
      "line_content": "socket.emit('correct_answers', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/practiceSessionHandler.ts",
      "module": "backend",
      "line": 229,
      "column": 28,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('feedback'",
      "line_content": "socket.emit('feedback', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/lockAnswers.ts",
      "module": "backend",
      "line": 136,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_answers_lock_changed'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_answers_lock_changed', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/lockAnswers.ts",
      "module": "backend",
      "line": 141,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answers_lock_changed'",
      "line_content": "io.to(gameRoom).emit('game_answers_lock_changed', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/pauseTimer.ts",
      "module": "backend",
      "line": 181,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('timer_update_response'",
      "line_content": "socket.emit('timer_update_response', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/pauseTimer.ts",
      "module": "backend",
      "line": 231,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_timer_updated'",
      "line_content": "io.to(gameRoom).emit('game_timer_updated', { timer: { ...pausedTimer, isPaused: true } } as GameTimerUpdatePayload); // TODO: Ensure isPaused is set",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/pauseTimer.ts",
      "module": "backend",
      "line": 234,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_timer_updated'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_timer_updated', { timer: { ...pausedTimer, isPaused: true } }); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/startTimer.ts",
      "module": "backend",
      "line": 215,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_timer_updated'",
      "line_content": "io.to(gameRoom).emit('game_timer_updated', { timer });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/startTimer.ts",
      "module": "backend",
      "line": 217,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_timer_updated'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_timer_updated', { timer });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/endGame.ts",
      "module": "backend",
      "line": 147,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_game_ended'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_game_ended', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/endGame.ts",
      "module": "backend",
      "line": 154,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_ended'",
      "line_content": "io.to(gameRoom).emit('game_ended', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/joinDashboard.ts",
      "module": "backend",
      "line": 251,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_connected_count'",
      "line_content": "socket.emit('quiz_connected_count', { count: participantCount });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/timerAction.ts",
      "module": "backend",
      "line": 90,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_timer_updated'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_timer_updated', { timer: expiredTimer, questionUid: expiredTimer.questionUid });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/timerAction.ts",
      "module": "backend",
      "line": 94,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_timer_updated'",
      "line_content": "io.to(liveRoom).emit('game_timer_updated', { timer: expiredTimer });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/timerAction.ts",
      "module": "backend",
      "line": 279,
      "column": 46,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_game_status_changed'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_game_status_changed', statusPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/timerAction.ts",
      "module": "backend",
      "line": 459,
      "column": 45,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "io.to(liveRoom).emit('game_question', gameQuestionPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/timerAction.ts",
      "module": "backend",
      "line": 471,
      "column": 46,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_question_changed'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_question_changed', questionChangedPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/timerAction.ts",
      "module": "backend",
      "line": 507,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_timer_updated'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_timer_updated', { timer, questionUid: targetQuestionUid });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/timerAction.ts",
      "module": "backend",
      "line": 511,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_timer_updated'",
      "line_content": "io.to(liveRoom).emit('game_timer_updated', { timer });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/setQuestion.ts",
      "module": "backend",
      "line": 284,
      "column": 38,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_game_status_changed'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_game_status_changed', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/setQuestion.ts",
      "module": "backend",
      "line": 292,
      "column": 34,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_question_changed'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_question_changed', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/teacherControl/setQuestion.ts",
      "module": "backend",
      "line": 329,
      "column": 33,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "io.to(liveRoom).emit('game_question', gameQuestionPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/requestNextQuestion.ts",
      "module": "backend",
      "line": 159,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "socket.emit('game_question', liveQuestionPayload); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/requestNextQuestion.ts",
      "module": "backend",
      "line": 176,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_ended'",
      "line_content": "socket.emit('game_ended', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/joinGame.ts",
      "module": "backend",
      "line": 89,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_joined'",
      "line_content": "socket.emit('game_joined', gameJoinedPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/joinGame.ts",
      "module": "backend",
      "line": 133,
      "column": 28,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_already_played'",
      "line_content": "socket.emit('game_already_played', gameAlreadyPlayedPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/joinGame.ts",
      "module": "backend",
      "line": 219,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_joined'",
      "line_content": "socket.emit('game_joined', gameJoinedPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/joinGame.ts",
      "module": "backend",
      "line": 278,
      "column": 40,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "socket.emit('game_question', lateJoinerQuestionPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/joinGame.ts",
      "module": "backend",
      "line": 286,
      "column": 44,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_timer_updated'",
      "line_content": "socket.emit('game_timer_updated', timerUpdatePayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/joinGame.ts",
      "module": "backend",
      "line": 309,
      "column": 56,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('player_joined_game'",
      "line_content": "socket.to(socket.data.currentGameRoom).emit('player_joined_game', playerJoinedPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/joinGame.ts",
      "module": "backend",
      "line": 402,
      "column": 56,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_participants'",
      "line_content": "socket.to(socket.data.currentGameRoom).emit('game_participants', { participants });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/gameAnswer.ts",
      "module": "backend",
      "line": 390,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('[GAME_ANSWER] Error emitting answer_received:'",
      "line_content": "console.error('[GAME_ANSWER] Error emitting answer_received:', emitError);",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/handlers/game/gameAnswer.ts",
      "module": "backend",
      "line": 272,
      "column": 38,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('dashboard_answer_stats_update'",
      "line_content": "io.to(dashboardRoom).emit('dashboard_answer_stats_update', dashboardStatsPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/gameAnswer.ts",
      "module": "backend",
      "line": 300,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_received'",
      "line_content": "socket.emit('answer_received', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/gameAnswer.ts",
      "module": "backend",
      "line": 382,
      "column": 33,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('leaderboard_update'",
      "line_content": "io.to(roomName).emit('leaderboard_update', { leaderboard });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/gameAnswer.ts",
      "module": "backend",
      "line": 386,
      "column": 28,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_received'",
      "line_content": "socket.emit('answer_received', { questionUid, timeSpent });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/gameAnswer.ts",
      "module": "backend",
      "line": 402,
      "column": 28,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_received'",
      "line_content": "socket.emit('answer_received', { questionUid, timeSpent });",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/requestParticipants.ts",
      "module": "backend",
      "line": 23,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_participants'",
      "line_content": "socket.emit('game_participants', { participants }); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/helpers.ts",
      "module": "backend",
      "line": 76,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "target.emit('game_question', payload); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/helpers.ts",
      "module": "backend",
      "line": 83,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_question'",
      "line_content": "io.to(target).emit('game_question', payload); // TODO: Define shared type if missing",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/handlers/game/index.ts",
      "module": "backend",
      "line": 118,
      "column": 44,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../tournament/index'",
      "line_content": "export { registerTournamentHandlers } from '../tournament/index';",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/utils/roomUtils.ts",
      "module": "backend",
      "line": 46,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('room_joined'",
      "line_content": "socket.emit('room_joined', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/utils/roomUtils.ts",
      "module": "backend",
      "line": 87,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('room_left'",
      "line_content": "socket.emit('room_left', {",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/utils/participantCountUtils.ts",
      "module": "backend",
      "line": 61,
      "column": 30,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_connected_count'",
      "line_content": "io.to(dashboardRoom).emit('quiz_connected_count', { count: totalCount } as ConnectedCountPayload);",
      "fixable": true
    },
    {
      "file": "backend/src/sockets/middleware/socketAuth.ts",
      "module": "backend",
      "line": 49,
      "column": 69,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'...'",
      "line_content": "tokenPrefix: (token || cookieToken)?.substring(0, 20) + '...' || null,",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/middleware/socketAuth.ts",
      "module": "backend",
      "line": 51,
      "column": 64,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'...'",
      "line_content": "cookieTokenPrefix: cookieToken?.substring(0, 20) + '...' || null",
      "fixable": false
    },
    {
      "file": "backend/src/sockets/middleware/socketAuth.ts",
      "module": "backend",
      "line": 95,
      "column": 60,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'...'",
      "line_content": "token: actualToken!.substring(0, 20) + '...',",
      "fixable": false
    },
    {
      "file": "backend/src/config/redis.ts",
      "module": "backend",
      "line": 7,
      "column": 5,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('REDIS_URL is not defined in environment variables.'",
      "line_content": "logger.error('REDIS_URL is not defined in environment variables.');",
      "fixable": false
    },
    {
      "file": "backend/src/config/redis.ts",
      "module": "backend",
      "line": 8,
      "column": 5,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('REDIS_URL is not defined.'",
      "line_content": "throw new Error('REDIS_URL is not defined.');",
      "fixable": false
    },
    {
      "file": "backend/src/config/redis.ts",
      "module": "backend",
      "line": 23,
      "column": 5,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "logger.error('Redis connection error:'",
      "line_content": "logger.error('Redis connection error:', err);",
      "fixable": false
    },
    {
      "file": "backend/src/config/redis.ts",
      "module": "backend",
      "line": 18,
      "column": 13,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "redisClient.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/src/tests/unit/participantCount.test.ts",
      "module": "backend",
      "line": 32,
      "column": 26,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "clientSocket.on('connect', done);",
      "fixable": true
    },
    {
      "file": "backend/src/tests/unit/participantCount.test.ts",
      "module": "backend",
      "line": 52,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('join-room'",
      "line_content": "socket.on('join-room', (roomName) => {",
      "fixable": true
    },
    {
      "file": "backend/src/tests/unit/participantCount.test.ts",
      "module": "backend",
      "line": 60,
      "column": 25,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "dashboardClient.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/src/tests/unit/participantCount.test.ts",
      "module": "backend",
      "line": 63,
      "column": 29,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('quiz_connected_count'",
      "line_content": "dashboardClient.on('quiz_connected_count', (data: { count: number }) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/testSetup.ts",
      "module": "backend",
      "line": 50,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/health'",
      "line_content": "app.get('/health', (req, res) => {",
      "fixable": false
    },
    {
      "file": "backend/tests/testSetup.ts",
      "module": "backend",
      "line": 55,
      "column": 13,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api'",
      "line_content": "app.use('/api', apiRouter);",
      "fixable": false
    },
    {
      "file": "backend/tests/testSetup.ts",
      "module": "backend",
      "line": 64,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/globalTeardown.ts",
      "module": "backend",
      "line": 8,
      "column": 13,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('unhandledRejection'",
      "line_content": "process.on('unhandledRejection', () => { });",
      "fixable": true
    },
    {
      "file": "backend/tests/socketDisconnectTest.ts",
      "module": "backend",
      "line": 71,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "client.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/support/databaseCleaner.ts",
      "module": "backend",
      "line": 24,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error cleaning database tables:'",
      "line_content": "console.error('Error cleaning database tables:', error);",
      "fixable": false
    },
    {
      "file": "backend/tests/support/databaseCleaner.ts",
      "module": "backend",
      "line": 20,
      "column": 64,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".\"",
      "line_content": "await prisma.$executeRaw`TRUNCATE TABLE \"public\".\"${tablename}\" CASCADE;`;",
      "fixable": false
    },
    {
      "file": "backend/tests/support/globalSetup.ts",
      "module": "backend",
      "line": 137,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error cleaning database:'",
      "line_content": "console.error('Error cleaning database:', error);",
      "fixable": false
    },
    {
      "file": "backend/tests/support/globalSetup.ts",
      "module": "backend",
      "line": 47,
      "column": 75,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".\"",
      "line_content": "await prisma.$executeRawUnsafe(`TRUNCATE TABLE \"public\".\"${tablename}\" CASCADE;`);",
      "fixable": false
    },
    {
      "file": "backend/tests/support/initTestDb.ts",
      "module": "backend",
      "line": 34,
      "column": 79,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\".\"",
      "line_content": "await prisma.$executeRawUnsafe(`TRUNCATE TABLE \"public\".\"${tablename}\" CASCADE;`);",
      "fixable": false
    },
    {
      "file": "backend/tests/unit/questionService.test.ts",
      "module": "backend",
      "line": 340,
      "column": 62,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('question-123'",
      "line_content": "const result = await questionService.deleteQuestion('question-123');",
      "fixable": true
    },
    {
      "file": "backend/tests/unit/questionService.test.ts",
      "module": "backend",
      "line": 351,
      "column": 54,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('nonexistent-id'",
      "line_content": "await expect(questionService.deleteQuestion('nonexistent-id'))",
      "fixable": true
    },
    {
      "file": "backend/tests/unit/questionService.test.ts",
      "module": "backend",
      "line": 362,
      "column": 54,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('question-123'",
      "line_content": "await expect(questionService.deleteQuestion('question-123'))",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gamesApi.test.ts",
      "module": "backend",
      "line": 86,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gamesApi.test.ts",
      "module": "backend",
      "line": 110,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gamesApi.test.ts",
      "module": "backend",
      "line": 127,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gamesApi.test.ts",
      "module": "backend",
      "line": 196,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games/ABC'",
      "line_content": ".get('/api/v1/games/ABC') // Too short",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gamesApi.test.ts",
      "module": "backend",
      "line": 373,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games/teacher/active'",
      "line_content": ".get('/api/v1/games/teacher/active');",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gamesApi.test.ts",
      "module": "backend",
      "line": 388,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games/teacher/active'",
      "line_content": ".get('/api/v1/games/teacher/active')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 156,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 207,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket1.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 220,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket2.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 234,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket3.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 273,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 321,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket1.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 325,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket2.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyHandler.test.ts",
      "module": "backend",
      "line": 21,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/lobbyBasic.test.ts",
      "module": "backend",
      "line": 44,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('join_lobby'",
      "line_content": "socket.on('join_lobby', (payload) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyBasic.test.ts",
      "module": "backend",
      "line": 52,
      "column": 46,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('participants_list'",
      "line_content": "io.to(`lobby_${accessCode}`).emit('participants_list', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyBasic.test.ts",
      "module": "backend",
      "line": 60,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('leave_lobby'",
      "line_content": "socket.on('leave_lobby', (payload) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyBasic.test.ts",
      "module": "backend",
      "line": 64,
      "column": 46,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('participant_left'",
      "line_content": "io.to(`lobby_${accessCode}`).emit('participant_left', { id: socket.id });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyBasic.test.ts",
      "module": "backend",
      "line": 170,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "client1.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyBasic.test.ts",
      "module": "backend",
      "line": 173,
      "column": 21,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "client1.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyBasic.test.ts",
      "module": "backend",
      "line": 180,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('participants_list'",
      "line_content": "client1.on('participants_list', (data: any) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 283,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "studentSocket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 300,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_game'",
      "line_content": "teacherSocket.emit('start_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 329,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "studentSocket.emit('game_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 343,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "studentSocket.emit('game_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 390,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_question'",
      "line_content": "studentSocket.on('game_question', nextQuestionListener);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 391,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_end'",
      "line_content": "studentSocket.on('game_end', gameEndListener);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 435,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "studentSocket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 445,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_game'",
      "line_content": "teacherSocket.emit('start_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-flow-e2e.test.ts",
      "module": "backend",
      "line": 52,
      "column": 9,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 5000",
      "line_content": "timeout: 5000,",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 137,
      "column": 25,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Socket.IO server close error:'",
      "line_content": "console.error('Socket.IO server close error:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 160,
      "column": 29,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('HTTP server close error:'",
      "line_content": "console.error('HTTP server close error:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 217,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error during database cleanup:'",
      "line_content": "console.error('Error during database cleanup:', e.message || e);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 277,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket1.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 278,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket2.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 282,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket1.emit('join_tournament', { accessCode: accessCode1, userId: player1.id, username: player1.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 283,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket2.emit('join_tournament', { accessCode: accessCode1, userId: player2.id, username: player2.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 295,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_tournament'",
      "line_content": "socket1.emit('start_tournament', { accessCode: accessCode1 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 314,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket1.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 321,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket2.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 394,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket1.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 395,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket2.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 399,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket1.emit('join_tournament', { accessCode: accessCode2, userId: player1.id, username: player1.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 400,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket2.emit('join_tournament', { accessCode: accessCode2, userId: player2.id, username: player2.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 412,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_tournament'",
      "line_content": "socket1.emit('start_tournament', { accessCode: accessCode2 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 441,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket1.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 448,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket2.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 247,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 264,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 272,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 364,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 381,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 389,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament.test.ts",
      "module": "backend",
      "line": 19,
      "column": 64,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout = 10000",
      "line_content": "const waitForEvent = (socket: ClientSocket, eventName: string, timeout = 10000): Promise<any> => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 255,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "studentSocket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 272,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_game'",
      "line_content": "teacherSocket.emit('start_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 296,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "studentSocket.emit('game_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 310,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "studentSocket.emit('game_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 357,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_question'",
      "line_content": "studentSocket.on('game_question', nextQuestionListener);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 358,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_end'",
      "line_content": "studentSocket.on('game_end', gameEndListener);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 453,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "studentSocket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 463,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_game'",
      "line_content": "teacherSocket.emit('start_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament-creation-e2e.test.ts",
      "module": "backend",
      "line": 49,
      "column": 9,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 5000",
      "line_content": "timeout: 5000,",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 43,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Unhandled Rejection at:'",
      "line_content": "console.error('Unhandled Rejection at:', promise, 'reason:', reason);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 305,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Socket connect_error:'",
      "line_content": "console.error('Socket connect_error:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 41,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('unhandledRejection'",
      "line_content": "process.on('unhandledRejection', (reason, promise) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 338,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 502,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket1.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 513,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket2.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 598,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket1.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 606,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket2.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameHandler.test.ts",
      "module": "backend",
      "line": 293,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 157,
      "column": 60,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "await new Promise<void>((resolve) => teacherSocket.on('connect', () => resolve()));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 165,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_dashboard'",
      "line_content": "teacherSocket.emit('join_dashboard', { gameId: quizId, userId: teacherUser.id, username: teacherUser.username }); // Using 'join_dashboard'",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 185,
      "column": 60,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "await new Promise<void>((resolve) => player1Socket.on('connect', () => resolve()));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 190,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "player1Socket.emit('join_game', { accessCode: accessCode, userId: player1User.id, username: player1User.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 252,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "teacherSocket.emit('set_question', { gameId: quizId, questionUid });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 274,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "teacherSocket.emit('quiz_timer_action', { gameId: quizId, action: 'resume' });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 283,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "teacherSocket.emit('quiz_timer_action', { gameId: quizId, action: 'pause' });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 300,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "teacherSocket.emit('quiz_timer_action', { gameId: quizId, action: 'resume' });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 314,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "teacherSocket.emit('quiz_timer_action', { gameId: quizId, action: 'stop' });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 104,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/game-templates'",
      "line_content": ".post('/api/v1/game-templates')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 126,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 181,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherQuiz.test.ts",
      "module": "backend",
      "line": 13,
      "column": 60,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout = 5000",
      "line_content": "function waitForEvent(socket: ClientSocket, event: string, timeout = 5000) { // Increased default timeout slightly",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 150,
      "column": 71,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket1.connect() && socket1.on('connect', () => resolve())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 151,
      "column": 71,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket2.connect() && socket2.on('connect', () => resolve())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 152,
      "column": 71,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket3.connect() && socket3.on('connect', () => resolve()))",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 159,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket1.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 168,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket2.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 177,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket3.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 224,
      "column": 81,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket1User1.connect() && socket1User1.on('connect', () => resolve())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 225,
      "column": 81,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket2User1.connect() && socket2User1.on('connect', () => resolve())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 226,
      "column": 81,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket1User2.connect() && socket1User2.on('connect', () => resolve()))",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 232,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket1User1.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 241,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket1User2.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 251,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket2User1.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 302,
      "column": 71,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket1.connect() && socket1.on('connect', () => resolve())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 303,
      "column": 71,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>(resolve => socket2.connect() && socket2.on('connect', () => resolve()))",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 309,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket1.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 318,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket2.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDeduplication.test.ts",
      "module": "backend",
      "line": 22,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 40,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/teachers/register'",
      "line_content": ".post('/api/v1/teachers/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 57,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/teachers/register'",
      "line_content": ".post('/api/v1/teachers/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 69,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/teachers/register'",
      "line_content": ".post('/api/v1/teachers/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 81,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/teachers/register'",
      "line_content": ".post('/api/v1/teachers/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 97,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/teachers/register'",
      "line_content": ".post('/api/v1/teachers/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 124,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth'",
      "line_content": ".post('/api/v1/auth')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 139,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth'",
      "line_content": ".post('/api/v1/auth')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 151,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth'",
      "line_content": ".post('/api/v1/auth')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 166,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth'",
      "line_content": ".post('/api/v1/auth')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.modified.ts",
      "module": "backend",
      "line": 191,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth'",
      "line_content": ".post('/api/v1/auth')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 233,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "studentSocket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 251,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "teacherSocket.emit('set_question', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 276,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "studentSocket.emit('game_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 290,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "studentSocket.emit('game_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 304,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('show_results'",
      "line_content": "teacherSocket.emit('show_results', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 317,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "teacherSocket.emit('set_question', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 330,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "studentSocket.emit('game_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 344,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('end_game'",
      "line_content": "teacherSocket.emit('end_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 367,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "studentSocket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 384,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "teacherSocket.emit('set_question', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 430,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "studentSocket.emit('join_game', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 441,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "teacherSocket.emit('set_question', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 451,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "teacherSocket.emit('set_question', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/gameFlow-e2e.test.ts",
      "module": "backend",
      "line": 50,
      "column": 9,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout: 5000",
      "line_content": "timeout: 5000,",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/projectorHandler.test.ts",
      "module": "backend",
      "line": 93,
      "column": 30,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "clientSocket.on('connect', resolve);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/projectorHandler.test.ts",
      "module": "backend",
      "line": 126,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_projector'",
      "line_content": "clientSocket.emit('join_projector', gameId);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/projectorHandler.test.ts",
      "module": "backend",
      "line": 127,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('projector_state'",
      "line_content": "clientSocket.on('projector_state', (state) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/projectorHandler.test.ts",
      "module": "backend",
      "line": 140,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('leave_projector'",
      "line_content": "clientSocket.emit('leave_projector', gameId);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 73,
      "column": 5,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('\u274c Unhandled Rejection at:'",
      "line_content": "console.error('\u274c Unhandled Rejection at:', promise, 'reason:', reason);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 76,
      "column": 5,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('\u274c Uncaught Exception thrown:'",
      "line_content": "console.error('\u274c Uncaught Exception thrown:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 238,
      "column": 21,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('\u274c Socket connection error:'",
      "line_content": "console.error('\u274c Socket connection error:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 72,
      "column": 9,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('unhandledRejection'",
      "line_content": "process.on('unhandledRejection', (reason, promise) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 75,
      "column": 9,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('uncaughtException'",
      "line_content": "process.on('uncaughtException', (err) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 207,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('participants_list'",
      "line_content": "socket.on('participants_list', (data: ParticipantsListResponse) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 216,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('room_left'",
      "line_content": "socket.on('room_left', (data: RoomLeftResponse) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 232,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "socket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 251,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_lobby'",
      "line_content": "socket.emit('join_lobby', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 291,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('leave_lobby'",
      "line_content": "socket.emit('leave_lobby', { accessCode });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 311,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('get_participants'",
      "line_content": "socket.emit('get_participants', { accessCode });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/lobbyDebug.test.ts",
      "module": "backend",
      "line": 49,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/socketConnection.test.ts",
      "module": "backend",
      "line": 59,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "clientSocket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketConnection.test.ts",
      "module": "backend",
      "line": 102,
      "column": 22,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "playerSocket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketConnection.test.ts",
      "module": "backend",
      "line": 44,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/socketConnection.test.ts",
      "module": "backend",
      "line": 87,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.ts",
      "module": "backend",
      "line": 40,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/teachers/register'",
      "line_content": ".post('/api/v1/teachers/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherAuth.test.ts",
      "module": "backend",
      "line": 77,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/auth'",
      "line_content": ".post('/api/v1/auth')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/server.test.ts",
      "module": "backend",
      "line": 8,
      "column": 44,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/health'",
      "line_content": "const res = await request(app).get('/health');",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 94,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Socket connect_error:'",
      "line_content": "console.error('Socket connect_error:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 35,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('echo'",
      "line_content": "socket.on('echo', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 37,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('echo_response'",
      "line_content": "socket.emit('echo_response', data);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 41,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_answer'",
      "line_content": "socket.on('game_answer', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 43,
      "column": 24,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('answer_received'",
      "line_content": "socket.emit('answer_received', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 81,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "socket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 115,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('echo_response'",
      "line_content": "socket.once('echo_response', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 149,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('answer_received'",
      "line_content": "socket.once('answer_received', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/socketEventTest.ts",
      "module": "backend",
      "line": 74,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 237,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Game state is null or undefined'",
      "line_content": "throw new Error('Game state is null or undefined');",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 151,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "teacherSocket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 152,
      "column": 27,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_dashboard'",
      "line_content": "teacherSocket.emit('join_dashboard', { gameId });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 154,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('game_control_state'",
      "line_content": "teacherSocket.once('game_control_state', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 165,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('game_control_state'",
      "line_content": "teacherSocket.once('game_control_state', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 173,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_dashboard'",
      "line_content": "teacherSocket.emit('join_dashboard', { gameId });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 178,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('dashboard_question_changed'",
      "line_content": "teacherSocket.once('dashboard_question_changed', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 183,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('set_question'",
      "line_content": "teacherSocket.emit('set_question', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 199,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('dashboard_timer_updated'",
      "line_content": "teacherSocket.once('dashboard_timer_updated', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 206,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('quiz_timer_action'",
      "line_content": "teacherSocket.emit('quiz_timer_action', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 215,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('dashboard_answers_lock_changed'",
      "line_content": "teacherSocket.once('dashboard_answers_lock_changed', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 219,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('lock_answers'",
      "line_content": "teacherSocket.emit('lock_answers', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 226,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('dashboard_game_status_changed'",
      "line_content": "teacherSocket.once('dashboard_game_status_changed', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 230,
      "column": 23,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('end_game'",
      "line_content": "teacherSocket.emit('end_game', { gameId });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/teacherDashboard.test.ts",
      "module": "backend",
      "line": 147,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 152,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('[SOCKET CONNECT_ERROR]'",
      "line_content": "console.error('[SOCKET CONNECT_ERROR]', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 156,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_question'",
      "line_content": "socket.on('game_question', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 160,
      "column": 47,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "await new Promise<void>(res => socket.on('connect', () => res()));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 168,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_game'",
      "line_content": "socket.emit('join_game', { accessCode, userId: playerId, username: 'Practice Player' });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 175,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_game'",
      "line_content": "socket.emit('start_game', { accessCode, userId: playerId }, (ack: any) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 180,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('game_question'",
      "line_content": "socket.once('game_question', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 187,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_game'",
      "line_content": "socket.emit('start_game', { accessCode, userId: playerId });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 196,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "socket.emit('game_answer', { accessCode, userId: playerId, questionUid: firstQ.uid, answer: 1, timeSpent: 1000 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 201,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('request_next_question'",
      "line_content": "socket.emit('request_next_question', { accessCode, userId: playerId, currentQuestionUid: firstQ.uid });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 209,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('game_answer'",
      "line_content": "socket.emit('game_answer', { accessCode, userId: playerId, questionUid: secondQ.question.uid, answer: 1, timeSpent: 1200 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 216,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_ended'",
      "line_content": "socket.on('game_ended', (data) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 223,
      "column": 16,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('request_next_question'",
      "line_content": "socket.emit('request_next_question', { accessCode, userId: playerId, currentQuestionUid: secondQ.uid });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/practiceMode.test.ts",
      "module": "backend",
      "line": 137,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/participantCount.test.ts",
      "module": "backend",
      "line": 56,
      "column": 20,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('join-room'",
      "line_content": "socket.on('join-room', (roomName: string) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/participantCount.test.ts",
      "module": "backend",
      "line": 84,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "client1.on('connect', () => onConnect(client1));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/participantCount.test.ts",
      "module": "backend",
      "line": 85,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "client2.on('connect', () => onConnect(client2));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/participantCount.test.ts",
      "module": "backend",
      "line": 86,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "client3.on('connect', () => onConnect(client3));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/participantCount.test.ts",
      "module": "backend",
      "line": 93,
      "column": 33,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join-room'",
      "line_content": "client1.emit('join-room', `lobby_${accessCode}`);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/participantCount.test.ts",
      "module": "backend",
      "line": 97,
      "column": 33,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join-room'",
      "line_content": "client2.emit('join-room', `lobby_${accessCode}`);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/participantCount.test.ts",
      "module": "backend",
      "line": 101,
      "column": 33,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join-room'",
      "line_content": "client3.emit('join-room', `game_${accessCode}`);",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 361,
      "column": 14,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "'DELETE /api/v1/questions/:uid'",
      "line_content": "describe('DELETE /api/v1/questions/:uid', () => {",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 83,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions'",
      "line_content": ".post('/api/v1/questions')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 110,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions'",
      "line_content": ".post('/api/v1/questions')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 145,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions/question-123'",
      "line_content": ".get('/api/v1/questions/question-123')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 165,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions/nonexistent-id'",
      "line_content": ".get('/api/v1/questions/nonexistent-id')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 208,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions/question-123'",
      "line_content": ".get('/api/v1/questions/question-123')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 272,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions?discipline=math&page=1&pageSize=20'",
      "line_content": ".get('/api/v1/questions?discipline=math&page=1&pageSize=20')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 329,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions/question-123'",
      "line_content": ".put('/api/v1/questions/question-123')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 354,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions/nonexistent-id'",
      "line_content": ".put('/api/v1/questions/nonexistent-id')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 366,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions/question-123'",
      "line_content": ".delete('/api/v1/questions/question-123')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/questionApi.test.ts",
      "module": "backend",
      "line": 379,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/questions/nonexistent-id'",
      "line_content": ".delete('/api/v1/questions/nonexistent-id')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 218,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error(\"Quiz template with ID non-existent-id not found or you don'",
      "line_content": "throw new Error(\"Quiz template with ID non-existent-id not found or you don't have permission to update it\");",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 251,
      "column": 17,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error(\"Quiz template with ID non-existent-id not found or you don'",
      "line_content": "throw new Error(\"Quiz template with ID non-existent-id not found or you don't have permission to delete it\");",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 237,
      "column": 14,
      "type": "database_queries",
      "severity": "high",
      "description": "Hardcoded SQL query",
      "matched_text": "'DELETE /api/v1/quiz-templates/:id'",
      "line_content": "describe('DELETE /api/v1/quiz-templates/:id', () => {",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 36,
      "column": 10,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": "describe('/api/v1/quiz-templates', () => {",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 89,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": ".post('/api/v1/quiz-templates')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 103,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": ".post('/api/v1/quiz-templates')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 115,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": ".post('/api/v1/quiz-templates')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 125,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": ".post('/api/v1/quiz-templates')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 133,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": ".post('/api/v1/quiz-templates')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 144,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": ".get('/api/v1/quiz-templates')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 152,
      "column": 51,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates'",
      "line_content": "const response = await requestApp.get('/api/v1/quiz-templates');",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 171,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates/non-existent-id'",
      "line_content": ".get('/api/v1/quiz-templates/non-existent-id')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 221,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates/non-existent-id'",
      "line_content": ".put('/api/v1/quiz-templates/non-existent-id')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/quizTemplateApi.test.ts",
      "module": "backend",
      "line": 254,
      "column": 25,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/quiz-templates/non-existent-id'",
      "line_content": ".delete('/api/v1/quiz-templates/non-existent-id')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/playerApi.test.ts",
      "module": "backend",
      "line": 33,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/players/register'",
      "line_content": ".post('/api/v1/players/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/playerApi.test.ts",
      "module": "backend",
      "line": 57,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/players/register'",
      "line_content": ".post('/api/v1/players/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/playerApi.test.ts",
      "module": "backend",
      "line": 68,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/players/register'",
      "line_content": ".post('/api/v1/players/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/playerApi.test.ts",
      "module": "backend",
      "line": 76,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/players/register'",
      "line_content": ".post('/api/v1/players/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/playerApi.test.ts",
      "module": "backend",
      "line": 98,
      "column": 23,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/players/register'",
      "line_content": ".post('/api/v1/players/register')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/playerApi.test.ts",
      "module": "backend",
      "line": 127,
      "column": 22,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/players/cookie/nonexistent-cookie-id'",
      "line_content": ".get('/api/v1/players/cookie/nonexistent-cookie-id');",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/updated-gameHandler.test.ts",
      "module": "backend",
      "line": 26,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 134,
      "column": 25,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Socket.IO server close error:'",
      "line_content": "console.error('Socket.IO server close error:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 157,
      "column": 29,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('HTTP server close error:'",
      "line_content": "console.error('HTTP server close error:', err);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 214,
      "column": 13,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error during database cleanup:'",
      "line_content": "console.error('Error during database cleanup:', e.message || e);",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 262,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket1.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 263,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket2.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 267,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket1.emit('join_tournament', { accessCode: accessCode1, userId: player1.id, username: player1.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 268,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket2.emit('join_tournament', { accessCode: accessCode1, userId: player2.id, username: player2.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 280,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_tournament'",
      "line_content": "socket1.emit('start_tournament', { accessCode: accessCode1 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 299,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket1.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 306,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket2.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 367,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket1.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 368,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket2.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 372,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket1.emit('join_tournament', { accessCode: accessCode2, userId: player1.id, username: player1.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 373,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket2.emit('join_tournament', { accessCode: accessCode2, userId: player2.id, username: player2.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 385,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_tournament'",
      "line_content": "socket1.emit('start_tournament', { accessCode: accessCode2 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 414,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket1.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 421,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket2.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 484,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket1.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 485,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket2.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 489,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket1.emit('join_tournament', { accessCode: accessCode1, userId: player1.id, username: player1.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 490,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket2.emit('join_tournament', { accessCode: accessCode1, userId: player2.id, username: player2.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 502,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_tournament'",
      "line_content": "socket1.emit('start_tournament', { accessCode: accessCode1 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 519,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket1.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 526,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket2.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 567,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket1.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 574,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket2.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 634,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket1.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 635,
      "column": 48,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "new Promise<void>((res) => socket2.on('connect', () => res())),",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 639,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket1.emit('join_tournament', { accessCode: accessCode1, userId: player1.id, username: player1.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 640,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket2.emit('join_tournament', { accessCode: accessCode1, userId: player2.id, username: player2.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 652,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('start_tournament'",
      "line_content": "socket1.emit('start_tournament', { accessCode: accessCode1 });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 669,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket1.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 676,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket2.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 707,
      "column": 50,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "await new Promise<void>((res) => socket3.on('connect', () => res()));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 710,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('join_tournament'",
      "line_content": "socket3.emit('join_tournament', { accessCode: accessCode1, userId: player3.id, username: player3.username });",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 716,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('game_question'",
      "line_content": "socket3.on('game_question', collectPayload('game_question'));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 717,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('correct_answers'",
      "line_content": "socket3.on('correct_answers', collectPayload('correct_answers'));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 718,
      "column": 17,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('feedback'",
      "line_content": "socket3.on('feedback', collectPayload('feedback'));",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 757,
      "column": 21,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "once('answer_feedback'",
      "line_content": "socket3.once('answer_feedback', (data: any) => {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 762,
      "column": 21,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "emit('tournament_answer'",
      "line_content": "socket3.emit('tournament_answer', {",
      "fixable": true
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 244,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 258,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket1 = ioc(address, { auth: { token: player1.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 260,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket2 = ioc(address, { auth: { token: player2.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 349,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 363,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket1 = ioc(address, { auth: { token: player1.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 365,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket2 = ioc(address, { auth: { token: player2.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 469,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 481,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket1 = ioc(address, { auth: { token: player1.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 482,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket2 = ioc(address, { auth: { token: player2.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 619,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/v1/games'",
      "line_content": ".post('/api/v1/games')",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 631,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket1 = ioc(address, { auth: { token: player1.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 632,
      "column": 72,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "socket2 = ioc(address, { auth: { token: player2.token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 706,
      "column": 77,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "const socket3 = ioc(address, { auth: { token: player3Token }, path: '/api/socket.io', transports: ['websocket'], forceNew: true });",
      "fixable": false
    },
    {
      "file": "backend/tests/integration/tournament2.test.ts",
      "module": "backend",
      "line": 19,
      "column": 64,
      "type": "magic_numbers",
      "severity": "medium",
      "description": "Magic number (should be configurable)",
      "matched_text": "timeout = 10000",
      "line_content": "const waitForEvent = (socket: ClientSocket, eventName: string, timeout = 10000): Promise<any> => {",
      "fixable": true
    },
    {
      "file": "backend/tests/debug/socket-debug.test.ts",
      "module": "backend",
      "line": 58,
      "column": 26,
      "type": "socket_events",
      "severity": "high",
      "description": "Hardcoded socket event name",
      "matched_text": "on('connect'",
      "line_content": "clientSocket.on('connect', () => {",
      "fixable": true
    },
    {
      "file": "backend/tests/debug/socket-debug.test.ts",
      "module": "backend",
      "line": 48,
      "column": 19,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'/api/socket.io'",
      "line_content": "path: '/api/socket.io',",
      "fixable": false
    },
    {
      "file": "shared/types/api.ts",
      "module": "shared",
      "line": 36,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./api/schemas'",
      "line_content": "} from './api/schemas';",
      "fixable": false
    },
    {
      "file": "shared/types/api.ts",
      "module": "shared",
      "line": 49,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./api/requests'",
      "line_content": "} from './api/requests';",
      "fixable": false
    },
    {
      "file": "shared/types/api.ts",
      "module": "shared",
      "line": 67,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./api/responses'",
      "line_content": "} from './api/responses';",
      "fixable": false
    },
    {
      "file": "shared/types/api.ts",
      "module": "shared",
      "line": 70,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./question'",
      "line_content": "export type { BaseQuestion as Question } from './question';",
      "fixable": false
    },
    {
      "file": "shared/types/socketEvents.ts",
      "module": "shared",
      "line": 13,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./core'",
      "line_content": "} from './core';",
      "fixable": false
    },
    {
      "file": "shared/types/socketEvents.ts",
      "module": "shared",
      "line": 19,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./practice/events'",
      "line_content": "} from './practice/events';",
      "fixable": false
    },
    {
      "file": "shared/types/socketEvents.ts",
      "module": "shared",
      "line": 33,
      "column": 102,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./core'",
      "line_content": "export type { ParticipantData, TimerUpdatePayload, GameTimerUpdatePayload, TimerActionPayload } from './core';",
      "fixable": false
    },
    {
      "file": "shared/types/socketEvents.ts",
      "module": "shared",
      "line": 34,
      "column": 63,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./core'",
      "line_content": "export type { LeaderboardEntry as LeaderboardEntryData } from './core';",
      "fixable": false
    },
    {
      "file": "shared/types/socketEvents.ts",
      "module": "shared",
      "line": 36,
      "column": 67,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./core'",
      "line_content": "export type { AnswerSubmissionPayload as GameAnswerPayload } from './core';",
      "fixable": false
    },
    {
      "file": "shared/types/socketEvents.ts",
      "module": "shared",
      "line": 209,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./tournament/question'",
      "line_content": "export type { TournamentQuestion } from './tournament/question';",
      "fixable": false
    },
    {
      "file": "shared/types/socket.ts",
      "module": "shared",
      "line": 24,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./socketEvents'",
      "line_content": "} from './socketEvents';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 11,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./core'",
      "line_content": "export * from './core';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 14,
      "column": 41,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./tournament/question'",
      "line_content": "export type { TournamentQuestion } from './tournament/question';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 15,
      "column": 47,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./quiz/question'",
      "line_content": "export type { Question as QuizQuestion } from './quiz/question';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 16,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./socket/payloads'",
      "line_content": "export * from './socket/payloads';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 17,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./socket/events'",
      "line_content": "export * from './socket/events';  // Export socket event constants",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 18,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./util/typeGuards'",
      "line_content": "export * from './util/typeGuards'; // Export type guards for runtime validation",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 19,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./util/logger'",
      "line_content": "export * from './util/logger';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 20,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./util/typeErrors'",
      "line_content": "export * from './util/typeErrors'; // Export type error helpers",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 21,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./util/typeMapping'",
      "line_content": "export * from './util/typeMapping'; // Export type mapping utilities",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 22,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./util/schemaValidation'",
      "line_content": "export * from './util/schemaValidation'; // Export schema validation utilities",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 23,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./util/schemaDefinitions'",
      "line_content": "export * from './util/schemaDefinitions'; // Export schema definitions",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 33,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./socket/events'",
      "line_content": "} from './socket/events';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 36,
      "column": 55,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./quiz/state'",
      "line_content": "export type { BaseQuizState, ExtendedQuizState } from './quiz/state';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 37,
      "column": 38,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./tournament/state'",
      "line_content": "export type { TournamentState } from './tournament/state';",
      "fixable": false
    },
    {
      "file": "shared/types/index.ts",
      "module": "shared",
      "line": 40,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../constants'",
      "line_content": "export * from '../constants';",
      "fixable": false
    },
    {
      "file": "shared/types/examples/usage.tsx",
      "module": "shared",
      "line": 29,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../index'",
      "line_content": "} from '../index';",
      "fixable": false
    },
    {
      "file": "shared/types/examples/backend-usage.ts",
      "module": "shared",
      "line": 85,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "console.error('Error processing question:'",
      "line_content": "console.error('Error processing question:', error);",
      "fixable": false
    },
    {
      "file": "shared/types/examples/backend-usage.ts",
      "module": "shared",
      "line": 31,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../index'",
      "line_content": "} from '../index';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 9,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./user'",
      "line_content": "export * from './user';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 12,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./game'",
      "line_content": "export * from './game';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 15,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./participant'",
      "line_content": "export * from './participant';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 18,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./timer'",
      "line_content": "export * from './timer';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 21,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./answer'",
      "line_content": "export * from './answer';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 24,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./question'",
      "line_content": "export * from './question';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 34,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./participant'",
      "line_content": "} from './participant';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 47,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./timer'",
      "line_content": "} from './timer';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 58,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./answer'",
      "line_content": "} from './answer';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 68,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./user'",
      "line_content": "} from './user';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 79,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./game'",
      "line_content": "} from './game';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 87,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./question'",
      "line_content": "} from './question';",
      "fixable": false
    },
    {
      "file": "shared/types/core/index.ts",
      "module": "shared",
      "line": 90,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../socket/dashboardPayloads'",
      "line_content": "export * from '../socket/dashboardPayloads';",
      "fixable": false
    },
    {
      "file": "shared/types/api/requests.ts",
      "module": "shared",
      "line": 32,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./schemas'",
      "line_content": "} from './schemas';",
      "fixable": false
    },
    {
      "file": "shared/types/api/requests.ts",
      "module": "shared",
      "line": 53,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./schemas'",
      "line_content": "} from './schemas';",
      "fixable": false
    },
    {
      "file": "shared/types/api/schemas.ts",
      "module": "shared",
      "line": 13,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../core/game.zod'",
      "line_content": "} from '../core/game.zod';",
      "fixable": false
    },
    {
      "file": "shared/types/socket/payloads.ts",
      "module": "shared",
      "line": 82,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./dashboardPayloads'",
      "line_content": "export * from './dashboardPayloads';",
      "fixable": false
    },
    {
      "file": "shared/types/socket/payloads.ts",
      "module": "shared",
      "line": 100,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./dashboardPayloads'",
      "line_content": "} from './dashboardPayloads';",
      "fixable": false
    },
    {
      "file": "shared/types/quiz/state.ts",
      "module": "shared",
      "line": 11,
      "column": 44,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../core'",
      "line_content": "export type { Chrono, QuestionTimer } from '../core';",
      "fixable": false
    },
    {
      "file": "shared/types/quiz/question.ts",
      "module": "shared",
      "line": 10,
      "column": 29,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../question'",
      "line_content": "export type { Answer } from '../question';",
      "fixable": false
    },
    {
      "file": "shared/types/quiz/liveQuestion.ts",
      "module": "shared",
      "line": 51,
      "column": 9,
      "type": "error_messages",
      "severity": "low",
      "description": "Hardcoded error message",
      "matched_text": "throw new Error('Cannot filter null or undefined question object'",
      "line_content": "throw new Error('Cannot filter null or undefined question object');",
      "fixable": false
    },
    {
      "file": "shared/types/tournament/participant.ts",
      "module": "shared",
      "line": 14,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'../core'",
      "line_content": "} from '../core';",
      "fixable": false
    },
    {
      "file": "shared/types/util/typeErrors.ts",
      "module": "shared",
      "line": 17,
      "column": 157,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "\"...\"",
      "line_content": "const message = `Type Error: Expected ${expectedType}, received ${actualType}${context ? ` in ${context}` : \"\"}.\\nValue: ${value}${value.length > 100 ? \"...\" : \"\"}`;",
      "fixable": false
    },
    {
      "file": "shared/constants/index.ts",
      "module": "shared",
      "line": 7,
      "column": 15,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./questionTypes'",
      "line_content": "export * from './questionTypes';",
      "fixable": false
    },
    {
      "file": "shared/constants/index.ts",
      "module": "shared",
      "line": 14,
      "column": 8,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./questionTypes'",
      "line_content": "} from './questionTypes';",
      "fixable": false
    },
    {
      "file": "shared/constants/index.ts",
      "module": "shared",
      "line": 15,
      "column": 52,
      "type": "file_paths",
      "severity": "medium",
      "description": "Hardcoded file path",
      "matched_text": "'./questionTypes'",
      "line_content": "export type { QuestionType, TimeoutConstant } from './questionTypes';",
      "fixable": false
    }
  ],
  "summary": {
    "total_files": 351,
    "total_issues": 1138,
    "by_severity": {
      "high": 348,
      "medium": 613,
      "low": 177
    },
    "by_type": {
      "file_paths": 463,
      "api_endpoints": 131,
      "error_messages": 177,
      "socket_events": 336,
      "magic_numbers": 18,
      "urls": 1,
      "database_queries": 8,
      "user_messages": 4
    }
  },
  "recommendations": [
    {
      "category": "critical",
      "priority": "high",
      "issue": "Found 348 high-severity hardcoded strings",
      "action": "Move user-facing messages, socket events, and SQL queries to configuration files"
    },
    {
      "category": "maintainability",
      "priority": "medium",
      "issue": "Found 613 medium-severity hardcoded strings",
      "action": "Consider extracting URLs, file paths, and magic numbers to constants"
    },
    {
      "category": "architecture",
      "priority": "high",
      "issue": "Found 336 hardcoded socket event names",
      "action": "Extract socket events to shared constants to prevent typos"
    },
    {
      "category": "i18n",
      "priority": "medium",
      "issue": "Found 4 hardcoded user messages",
      "action": "Implement internationalization (i18n) system for user-facing text"
    }
  ]
}
