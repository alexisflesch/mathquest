"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.questionCreationSchema = exports.questionSchema = void 0;
// Generated by ts-to-zod
const zod_1 = require("zod");
// Define a proper base question schema instead of z.any() which doesn't have extend
const baseQuestionSchema = zod_1.z.object({
    uid: zod_1.z.string().optional(), // Assuming uid might be part of a full question object later
});
exports.questionSchema = baseQuestionSchema.extend({
    title: zod_1.z.string().optional(),
    text: zod_1.z.string({ required_error: "Question text is required" }), // Renamed from 'question' and made required
    answerOptions: zod_1.z.array(zod_1.z.string(), { required_error: "Answer options are required" }),
    correctAnswers: zod_1.z.array(zod_1.z.boolean(), { required_error: "Correct answers are required" }),
    questionType: zod_1.z.string({ required_error: "Question type is required" }),
    discipline: zod_1.z.string({ required_error: "Discipline is required" }),
    themes: zod_1.z.array(zod_1.z.string()).optional(),
    difficulty: zod_1.z.number().optional(),
    gradeLevel: zod_1.z.string().optional(),
    author: zod_1.z.string().optional(),
    explanation: zod_1.z.string().optional(),
    tags: zod_1.z.array(zod_1.z.string()).optional(),
    timeLimit: zod_1.z.number().optional(),
    isHidden: zod_1.z.boolean().optional(), // Renamed from 'hidden'
    // Removed 'correct' as it's replaced by correctAnswers
});
// Schema for creating a question, essentially the same as questionSchema but without uid if it's auto-generated
exports.questionCreationSchema = exports.questionSchema.omit({ uid: true });
