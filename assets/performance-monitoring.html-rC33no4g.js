import{_ as s,c as a,a as e,o as t}from"./app-DoDG4mLI.js";const p={};function o(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="performance-monitoring-documentation" tabindex="-1"><a class="header-anchor" href="#performance-monitoring-documentation"><span>Performance &amp; Monitoring Documentation</span></a></h1><p>This document covers the performance optimization strategies, monitoring capabilities, and caching mechanisms implemented in MathQuest.</p><h2 id="memory-optimization" tabindex="-1"><a class="header-anchor" href="#memory-optimization"><span>Memory Optimization</span></a></h2><h3 id="vps-memory-constraints" tabindex="-1"><a class="header-anchor" href="#vps-memory-constraints"><span>VPS Memory Constraints</span></a></h3><p>MathQuest is optimized to run efficiently on low-cost VPS environments with limited memory:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// PM2 ecosystem configuration for memory management</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;mathquest-backend&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">script</span><span class="token operator">:</span> <span class="token string">&quot;npm&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token string">&quot;run start:memory-limited&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">max_memory_restart</span><span class="token operator">:</span> <span class="token string">&quot;400M&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">log_file</span><span class="token operator">:</span> <span class="token string">&quot;./logs/pm2-backend.log&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;mathquest-frontend&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">script</span><span class="token operator">:</span> <span class="token string">&quot;npm&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token string">&quot;run start:minimal&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">max_memory_restart</span><span class="token operator">:</span> <span class="token string">&quot;300M&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">log_file</span><span class="token operator">:</span> <span class="token string">&quot;./logs/pm2-frontend.log&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Memory Limits:</strong></p><ul><li><strong>Backend</strong>: 400MB maximum before automatic restart</li><li><strong>Frontend</strong>: 300MB maximum before automatic restart</li><li><strong>Build Process</strong>: 1GB limit for compilation</li><li><strong>PWA Cache</strong>: 2MB per file size limit</li></ul><h3 id="node-js-memory-configuration" tabindex="-1"><a class="header-anchor" href="#node-js-memory-configuration"><span>Node.js Memory Configuration</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token comment">// Backend memory optimization scripts</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;start:memory-limited&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node --max-old-space-size=256 --max-semi-space-size=64 --max-new-space-size=32 -r dotenv/config dist/backend/src/server.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;start:ultra-limited&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node --max-old-space-size=128 --max-semi-space-size=32 --max-new-space-size=16 -r dotenv/config dist/backend/src/server.js&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Frontend memory optimization</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;start:minimal&quot;</span><span class="token operator">:</span> <span class="token string">&quot;NODE_OPTIONS=&#39;--max-old-space-size=256 --max-semi-space-size=64&#39; NEXT_TELEMETRY_DISABLED=1 next start -p 3008 --quiet&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;start:quiet&quot;</span><span class="token operator">:</span> <span class="token string">&quot;NODE_OPTIONS=&#39;--max-old-space-size=512 --max-semi-space-size=128&#39; NEXT_TELEMETRY_DISABLED=1 next start -p 3008 --quiet&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis-caching-strategy" tabindex="-1"><a class="header-anchor" href="#redis-caching-strategy"><span>Redis Caching Strategy</span></a></h2><h3 id="connection-configuration" tabindex="-1"><a class="header-anchor" href="#connection-configuration"><span>Connection Configuration</span></a></h3><p>MathQuest uses Redis for high-performance caching and session management:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Redis client configuration</span></span>
<span class="line"><span class="token keyword">const</span> redisClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Redis</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REDIS_URL</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    maxRetriesPerRequest<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// Keep trying to reconnect</span></span>
<span class="line">    enableReadyCheck<span class="token operator">:</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Connection event handling</span></span>
<span class="line">redisClient<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connect&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Successfully connected to Redis.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">redisClient<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Redis connection error:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="caching-use-cases" tabindex="-1"><a class="header-anchor" href="#caching-use-cases"><span>Caching Use Cases</span></a></h3><p><strong>Session Management:</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// User session storage in Redis</span></span>
<span class="line"><span class="token keyword">const</span> sessionKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">session:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sessionId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> redisClient<span class="token punctuation">.</span><span class="token function">setex</span><span class="token punctuation">(</span>sessionKey<span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>sessionData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Game State Caching:</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Game timer state caching</span></span>
<span class="line"><span class="token keyword">const</span> timerKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">game:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gameId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:timer</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> redisClient<span class="token punctuation">.</span><span class="token function">setex</span><span class="token punctuation">(</span>timerKey<span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>timerState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Leaderboard caching</span></span>
<span class="line"><span class="token keyword">const</span> leaderboardKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">game:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gameId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:leaderboard</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> redisClient<span class="token punctuation">.</span><span class="token function">setex</span><span class="token punctuation">(</span>leaderboardKey<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>leaderboard<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Real-time Data:</strong></p><ul><li><strong>Timer States</strong>: Cached for 1 hour with automatic expiration</li><li><strong>Participant Scores</strong>: Cached for 5 minutes during active games</li><li><strong>Game Metadata</strong>: Cached for 30 minutes</li><li><strong>User Sessions</strong>: Cached for 1 hour with sliding expiration</li></ul><h3 id="socket-io-redis-adapter" tabindex="-1"><a class="header-anchor" href="#socket-io-redis-adapter"><span>Socket.IO Redis Adapter</span></a></h3><p>For horizontal scaling and real-time performance:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Redis adapter for Socket.IO clustering</span></span>
<span class="line"><span class="token keyword">const</span> subClient <span class="token operator">=</span> redisClient<span class="token punctuation">.</span><span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">io<span class="token punctuation">.</span><span class="token function">adapter</span><span class="token punctuation">(</span><span class="token function">createAdapter</span><span class="token punctuation">(</span>redisClient<span class="token punctuation">,</span> subClient<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Benefits:</strong></p><ul><li><strong>Horizontal Scaling</strong>: Support for multiple server instances</li><li><strong>Message Broadcasting</strong>: Efficient cross-server communication</li><li><strong>Session Persistence</strong>: Real-time state synchronization</li><li><strong>Load Distribution</strong>: Automatic connection distribution</li></ul><h2 id="performance-monitoring" tabindex="-1"><a class="header-anchor" href="#performance-monitoring"><span>Performance Monitoring</span></a></h2><h3 id="health-check-endpoints" tabindex="-1"><a class="header-anchor" href="#health-check-endpoints"><span>Health Check Endpoints</span></a></h3><p>MathQuest provides comprehensive health monitoring:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Basic health check</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/health&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;OK&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Detailed memory monitoring</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/health/memory&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token operator">:</span> Request<span class="token punctuation">,</span> res<span class="token operator">:</span> Response<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> memUsage <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">memoryUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> uptime <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">uptime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        status<span class="token operator">:</span> <span class="token string">&#39;OK&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        memory<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            used<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>memUsage<span class="token punctuation">.</span>heapUsed <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// MB</span></span>
<span class="line">            total<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>memUsage<span class="token punctuation">.</span>heapTotal <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// MB</span></span>
<span class="line">            external<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>memUsage<span class="token punctuation">.</span>external <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// MB</span></span>
<span class="line">            rss<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>memUsage<span class="token punctuation">.</span>rss <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token comment">// MB</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        uptime<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>uptime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// seconds</span></span>
<span class="line">        timestamp<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Monitoring Data:</strong></p><ul><li><strong>Heap Usage</strong>: JavaScript heap memory consumption</li><li><strong>External Memory</strong>: C++ objects bound to JavaScript objects</li><li><strong>RSS</strong>: Resident Set Size (total memory allocated)</li><li><strong>Uptime</strong>: Server uptime in seconds</li><li><strong>Timestamp</strong>: Current server time</li></ul><h3 id="pm2-process-monitoring" tabindex="-1"><a class="header-anchor" href="#pm2-process-monitoring"><span>PM2 Process Monitoring</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// PM2 ecosystem configuration with monitoring</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;mathquest-backend&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">max_memory_restart</span><span class="token operator">:</span> <span class="token string">&quot;400M&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">log_file</span><span class="token operator">:</span> <span class="token string">&quot;./logs/pm2-backend.log&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">out_file</span><span class="token operator">:</span> <span class="token string">&quot;./logs/pm2-backend-out.log&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">error_file</span><span class="token operator">:</span> <span class="token string">&quot;./logs/pm2-backend-error.log&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">log_date_format</span><span class="token operator">:</span> <span class="token string">&quot;YYYY-MM-DD HH:mm:ss Z&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">merge_logs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">autorestart</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Monitoring Features:</strong></p><ul><li><strong>Automatic Restart</strong>: Memory threshold-based restarts</li><li><strong>Log Management</strong>: Structured logging with timestamps</li><li><strong>Process Stats</strong>: CPU, memory, and uptime tracking</li><li><strong>Cluster Mode</strong>: Multiple process instances for load balancing</li></ul><h3 id="application-logging" tabindex="-1"><a class="header-anchor" href="#application-logging"><span>Application Logging</span></a></h3><p>Comprehensive logging for performance monitoring:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Performance logging</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Game started&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    gameId<span class="token operator">:</span> game<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">    participantCount<span class="token operator">:</span> participants<span class="token punctuation">.</span>length<span class="token punctuation">,</span></span>
<span class="line">    timestamp<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Memory usage logging</span></span>
<span class="line"><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> memUsage <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">memoryUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Memory usage&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        heapUsed<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>memUsage<span class="token punctuation">.</span>heapUsed <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        heapTotal<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>memUsage<span class="token punctuation">.</span>heapTotal <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        external<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>memUsage<span class="token punctuation">.</span>external <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        timestamp<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Every 5 minutes</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="database-performance" tabindex="-1"><a class="header-anchor" href="#database-performance"><span>Database Performance</span></a></h2><h3 id="prisma-query-optimization" tabindex="-1"><a class="header-anchor" href="#prisma-query-optimization"><span>Prisma Query Optimization</span></a></h3><p>MathQuest uses Prisma ORM with optimized query patterns:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Optimized user lookup with select</span></span>
<span class="line"><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> prisma<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    where<span class="token operator">:</span> <span class="token punctuation">{</span> email<span class="token operator">:</span> email <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    select<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        id<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        email<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        password<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        role<span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Efficient game queries with relations</span></span>
<span class="line"><span class="token keyword">const</span> game <span class="token operator">=</span> <span class="token keyword">await</span> prisma<span class="token punctuation">.</span>gameInstance<span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    where<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        gameCode<span class="token operator">:</span> gameCode<span class="token punctuation">,</span></span>
<span class="line">        status<span class="token operator">:</span> <span class="token string">&#39;ACTIVE&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    include<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        participants<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            select<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                id<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">                name<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">                score<span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Optimization Techniques:</strong></p><ul><li><strong>Selective Queries</strong>: Only fetch required fields</li><li><strong>Relation Loading</strong>: Efficient eager loading of related data</li><li><strong>Connection Pooling</strong>: Automatic connection management</li><li><strong>Query Caching</strong>: Database-level query result caching</li></ul><h3 id="connection-pooling" tabindex="-1"><a class="header-anchor" href="#connection-pooling"><span>Connection Pooling</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Prisma connection configuration</span></span>
<span class="line"><span class="token keyword">const</span> prisma <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrismaClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    datasources<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        db<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            url<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DATABASE_URL</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    log<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span></span>
<span class="line">        <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token string">&#39;query&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;warn&#39;</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scoring-performance" tabindex="-1"><a class="header-anchor" href="#scoring-performance"><span>Scoring Performance</span></a></h2><h3 id="optimized-scoring-algorithm" tabindex="-1"><a class="header-anchor" href="#optimized-scoring-algorithm"><span>Optimized Scoring Algorithm</span></a></h3><p>The scoring service implements performance-optimized calculations:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Efficient scoring calculation</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">calculateAnswerScore</span><span class="token punctuation">(</span></span>
<span class="line">    question<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span></span>
<span class="line">    answer<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span></span>
<span class="line">    serverTimeSpent<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    totalPresentationTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    accessCode<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> score<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> timePenalty<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Fast correctness check</span></span>
<span class="line">    <span class="token keyword">const</span> isCorrect <span class="token operator">=</span> <span class="token function">checkAnswerCorrectness</span><span class="token punctuation">(</span>question<span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isCorrect<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">{</span> score<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> timePenalty<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Optimized time penalty calculation</span></span>
<span class="line">    <span class="token keyword">const</span> timePenalty <span class="token operator">=</span> <span class="token function">calculateTimePenalty</span><span class="token punctuation">(</span>serverTimeSpent<span class="token punctuation">,</span> question<span class="token punctuation">.</span>timeLimit<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Base score calculation</span></span>
<span class="line">    <span class="token keyword">const</span> baseScore <span class="token operator">=</span> question<span class="token punctuation">.</span>points <span class="token operator">||</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> finalScore <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> baseScore <span class="token operator">-</span> timePenalty<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span> score<span class="token operator">:</span> finalScore<span class="token punctuation">,</span> timePenalty <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Performance Features:</strong></p><ul><li><strong>Early Returns</strong>: Fast rejection of incorrect answers</li><li><strong>Cached Calculations</strong>: Time penalty pre-computation</li><li><strong>Memory Efficient</strong>: Minimal object creation</li><li><strong>Async Optimization</strong>: Non-blocking database operations</li></ul><h2 id="real-time-performance" tabindex="-1"><a class="header-anchor" href="#real-time-performance"><span>Real-time Performance</span></a></h2><h3 id="socket-io-optimization" tabindex="-1"><a class="header-anchor" href="#socket-io-optimization"><span>Socket.IO Optimization</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Optimized Socket.IO configuration</span></span>
<span class="line"><span class="token keyword">const</span> io <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SocketIOServer</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    cors<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        origin<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">FRONTEND_URL</span><span class="token punctuation">,</span></span>
<span class="line">        methods<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        credentials<span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    path<span class="token operator">:</span> <span class="token string">&#39;/api/socket.io&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    transports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;websocket&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;polling&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    pingTimeout<span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>    <span class="token comment">// 30 seconds</span></span>
<span class="line">    pingInterval<span class="token operator">:</span> <span class="token number">25000</span>    <span class="token comment">// 25 seconds</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Performance Optimizations:</strong></p><ul><li><strong>WebSocket Priority</strong>: Preferred transport for lower latency</li><li><strong>Connection Pooling</strong>: Efficient connection management</li><li><strong>Heartbeat Optimization</strong>: Balanced ping/pong intervals</li><li><strong>Room-based Isolation</strong>: Targeted message delivery</li></ul><h3 id="event-handling-optimization" tabindex="-1"><a class="header-anchor" href="#event-handling-optimization"><span>Event Handling Optimization</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Efficient event broadcasting</span></span>
<span class="line">io<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>gameRoom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;leaderboardUpdate&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    leaderboard<span class="token operator">:</span> cachedLeaderboard<span class="token punctuation">,</span></span>
<span class="line">    timestamp<span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Targeted participant updates</span></span>
<span class="line">socket<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>participantId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;scoreUpdate&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    score<span class="token operator">:</span> newScore<span class="token punctuation">,</span></span>
<span class="line">    totalScore<span class="token operator">:</span> totalScore</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="build-performance" tabindex="-1"><a class="header-anchor" href="#build-performance"><span>Build Performance</span></a></h2><h3 id="memory-constrained-build-process" tabindex="-1"><a class="header-anchor" href="#memory-constrained-build-process"><span>Memory-Constrained Build Process</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Low-memory build configuration</span></span>
<span class="line"><span class="token assign-left variable">NODE_OPTIONS</span><span class="token operator">=</span><span class="token string">&quot;--max-old-space-size=1024 --max-semi-space-size=256&quot;</span> <span class="token function">npm</span> run build</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Parallel build optimization</span></span>
<span class="line"><span class="token function">npm</span> run build:backend <span class="token operator">&amp;</span> <span class="token function">npm</span> run build:frontend <span class="token operator">&amp;</span> <span class="token function">wait</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Build Optimizations:</strong></p><ul><li><strong>Memory Limits</strong>: Controlled memory usage during compilation</li><li><strong>Parallel Processing</strong>: Concurrent backend and frontend builds</li><li><strong>Dependency Optimization</strong>: Minimal bundle sizes</li><li><strong>Tree Shaking</strong>: Removal of unused code</li></ul><h2 id="monitoring-dashboard" tabindex="-1"><a class="header-anchor" href="#monitoring-dashboard"><span>Monitoring Dashboard</span></a></h2><h3 id="key-metrics-to-monitor" tabindex="-1"><a class="header-anchor" href="#key-metrics-to-monitor"><span>Key Metrics to Monitor</span></a></h3><p><strong>System Metrics:</strong></p><ul><li><strong>Memory Usage</strong>: Heap, external, and RSS monitoring</li><li><strong>CPU Usage</strong>: Process and system CPU consumption</li><li><strong>Disk I/O</strong>: Database and log file operations</li><li><strong>Network I/O</strong>: Socket connections and API requests</li></ul><p><strong>Application Metrics:</strong></p><ul><li><strong>Active Games</strong>: Current number of running games</li><li><strong>Connected Users</strong>: Real-time user connections</li><li><strong>Response Times</strong>: API endpoint performance</li><li><strong>Error Rates</strong>: Application error frequency</li></ul><p><strong>Database Metrics:</strong></p><ul><li><strong>Connection Pool</strong>: Active and idle connections</li><li><strong>Query Performance</strong>: Slow query identification</li><li><strong>Cache Hit Rates</strong>: Redis cache effectiveness</li><li><strong>Transaction Rates</strong>: Database operation frequency</li></ul><h3 id="alert-configuration" tabindex="-1"><a class="header-anchor" href="#alert-configuration"><span>Alert Configuration</span></a></h3><p><strong>Memory Alerts:</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// PM2 memory threshold alerts</span></span>
<span class="line"><span class="token literal-property property">max_memory_restart</span><span class="token operator">:</span> <span class="token string">&quot;400M&quot;</span>  <span class="token comment">// Restart at 400MB usage</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Performance Alerts:</strong></p><ul><li>Response time &gt; 2 seconds</li><li>Error rate &gt; 5%</li><li>Memory usage &gt; 80%</li><li>Database connection pool exhausted</li></ul><h2 id="performance-testing" tabindex="-1"><a class="header-anchor" href="#performance-testing"><span>Performance Testing</span></a></h2><h3 id="load-testing-strategy" tabindex="-1"><a class="header-anchor" href="#load-testing-strategy"><span>Load Testing Strategy</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Socket connection load test</span></span>
<span class="line"><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Socket.IO Performance&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should handle 1000 concurrent connections&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Load testing implementation</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should maintain &amp;lt;100ms response time under load&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Performance benchmarking</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Test Scenarios:</strong></p><ul><li><strong>Connection Scaling</strong>: Maximum concurrent users</li><li><strong>Message Broadcasting</strong>: High-frequency event handling</li><li><strong>Database Load</strong>: Concurrent read/write operations</li><li><strong>Memory Leak Detection</strong>: Long-running stability tests</li></ul><h2 id="optimization-checklist" tabindex="-1"><a class="header-anchor" href="#optimization-checklist"><span>Optimization Checklist</span></a></h2><h3 id="pre-deployment-performance-review" tabindex="-1"><a class="header-anchor" href="#pre-deployment-performance-review"><span>Pre-Deployment Performance Review</span></a></h3><ul><li>[ ] Memory limits configured for target environment</li><li>[ ] Redis caching enabled and optimized</li><li>[ ] Database connection pooling configured</li><li>[ ] Socket.IO adapter properly configured</li><li>[ ] PM2 monitoring and auto-restart enabled</li><li>[ ] Build process optimized for memory constraints</li><li>[ ] Logging configured for performance monitoring</li><li>[ ] Health check endpoints accessible</li></ul><h3 id="ongoing-performance-maintenance" tabindex="-1"><a class="header-anchor" href="#ongoing-performance-maintenance"><span>Ongoing Performance Maintenance</span></a></h3><ul><li>[ ] Regular memory usage monitoring</li><li>[ ] Database query performance analysis</li><li>[ ] Cache hit rate optimization</li><li>[ ] Socket connection monitoring</li><li>[ ] Build time optimization</li><li>[ ] Dependency updates for performance improvements</li><li>[ ] Load testing after significant changes</li></ul><h2 id="troubleshooting-performance-issues" tabindex="-1"><a class="header-anchor" href="#troubleshooting-performance-issues"><span>Troubleshooting Performance Issues</span></a></h2><h3 id="common-performance-problems" tabindex="-1"><a class="header-anchor" href="#common-performance-problems"><span>Common Performance Problems</span></a></h3><p><strong>Memory Issues:</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Check memory usage</span></span>
<span class="line"><span class="token function">curl</span> http://localhost:3007/health/memory</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Monitor PM2 processes</span></span>
<span class="line">pm2 monit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Database Performance:</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token comment">-- Identify slow queries</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> pg_stat_activity</span>
<span class="line"><span class="token keyword">WHERE</span> state <span class="token operator">=</span> <span class="token string">&#39;active&#39;</span> <span class="token operator">AND</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> query_start <span class="token operator">&gt;</span> <span class="token keyword">interval</span> <span class="token string">&#39;1 second&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Redis Performance:</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Check Redis memory usage</span></span>
<span class="line">redis-cli info memory</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Monitor Redis operations</span></span>
<span class="line">redis-cli monitor</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Socket.IO Performance:</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Monitor connection counts</span></span>
<span class="line">io<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>clientsCount</span>
<span class="line"></span>
<span class="line"><span class="token comment">// Check room membership</span></span>
<span class="line">io<span class="token punctuation">.</span>sockets<span class="token punctuation">.</span>adapter<span class="token punctuation">.</span>rooms</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This performance documentation should be regularly updated as new optimizations are implemented and monitoring capabilities are enhanced.</p>`,99)]))}const c=s(p,[["render",o]]),r=JSON.parse('{"path":"/details-techniques/performance-monitoring.html","title":"Performance & Monitoring","lang":"fr-FR","frontmatter":{"title":"Performance & Monitoring","description":"Performance optimization strategies, monitoring endpoints, and caching mechanisms for MathQuest"},"git":{"updatedTime":1758306113000,"contributors":[{"name":"alexisflesch","username":"alexisflesch","email":"alexis.flesch@gmail.com","commits":2,"url":"https://github.com/alexisflesch"}],"changelog":[{"hash":"ae9a15a776e52f16050f3ed102efa019223bc059","time":1758306113000,"email":"alexis.flesch@gmail.com","author":"alexisflesch","message":"cleaning up \\"class\\" mode which was legacy"},{"hash":"8fbb71211cc25ed6748dfb46362eb2796047c9da","time":1758286875000,"email":"alexis.flesch@gmail.com","author":"alexisflesch","message":"updating doc"}]},"filePathRelative":"details-techniques/performance-monitoring.md"}');export{c as comp,r as data};
