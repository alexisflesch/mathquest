import{_ as n,c as a,a as e,o as t}from"./app-DoDG4mLI.js";const p={};function i(c,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="services-backend" tabindex="-1"><a class="header-anchor" href="#services-backend"><span>Services backend</span></a></h1><h2 id="vue-d-ensemble-des-services" tabindex="-1"><a class="header-anchor" href="#vue-d-ensemble-des-services"><span>Vue d&#39;ensemble des services</span></a></h2><p>Le backend de MathQuest est organisé autour de plusieurs services métier qui gèrent les différentes fonctionnalités de l&#39;application. L&#39;architecture suit le principe de responsabilité unique avec une séparation claire entre les couches.</p><h2 id="architecture-des-services" tabindex="-1"><a class="header-anchor" href="#architecture-des-services"><span>Architecture des services</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">backend/src/core/services/</span>
<span class="line">├── scoringService.ts          # Calcul des scores et pénalités</span>
<span class="line">├── canonicalTimerService.ts   # Gestion centralisée des timers</span>
<span class="line">├── gameStateService.ts        # État des parties (Redis)</span>
<span class="line">├── gameParticipantService.ts  # Gestion des participants</span>
<span class="line">├── timerKeyUtil.ts           # Utilitaires pour les clés Redis</span>
<span class="line">└── ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gestion-des-evenements-quiz" tabindex="-1"><a class="header-anchor" href="#gestion-des-evenements-quiz"><span>Gestion des événements quiz</span></a></h2><h3 id="flux-d-un-evenement-quiz-typique" tabindex="-1"><a class="header-anchor" href="#flux-d-un-evenement-quiz-typique"><span>Flux d&#39;un événement quiz typique</span></a></h3><ol><li><strong>Réception de la réponse</strong> (<code>GAME_ANSWER</code>)</li><li><strong>Validation de la payload</strong></li><li><strong>Résolution du contexte</strong> (gameInstance, participant, question)</li><li><strong>Calcul du score</strong> via <code>ScoringService</code></li><li><strong>Mise à jour de la base de données</strong></li><li><strong>Diffusion des mises à jour</strong> via Socket.IO</li></ol><h3 id="gestionnaire-principal-game-index-ts" tabindex="-1"><a class="header-anchor" href="#gestionnaire-principal-game-index-ts"><span>Gestionnaire principal (<code>game/index.ts</code>)</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Extrait du gestionnaire GAME_ANSWER</span></span>
<span class="line">socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token constant">GAME_EVENTS</span><span class="token punctuation">.</span><span class="token constant">GAME_ANSWER</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>payload<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 1. Validation du payload avec Zod</span></span>
<span class="line">  <span class="token keyword">const</span> parseResult <span class="token operator">=</span> AnswerSubmissionPayloadSchema<span class="token punctuation">.</span><span class="token function">safeParse</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 2. Résolution du contexte</span></span>
<span class="line">  <span class="token keyword">const</span> gameInstance <span class="token operator">=</span> <span class="token keyword">await</span> prisma<span class="token punctuation">.</span>gameInstance<span class="token punctuation">.</span><span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    where<span class="token operator">:</span> <span class="token punctuation">{</span> accessCode<span class="token operator">:</span> payload<span class="token punctuation">.</span>accessCode <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 3. Récupération du participant</span></span>
<span class="line">  <span class="token keyword">const</span> participant <span class="token operator">=</span> <span class="token keyword">await</span> prisma<span class="token punctuation">.</span>gameParticipant<span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    where<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      gameInstanceId<span class="token operator">:</span> gameInstance<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">      userId<span class="token operator">:</span> payload<span class="token punctuation">.</span>userId</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 4. Calcul du score</span></span>
<span class="line">  <span class="token keyword">const</span> scoreResult <span class="token operator">=</span> <span class="token keyword">await</span> ScoringService<span class="token punctuation">.</span><span class="token function">submitAnswerWithScoring</span><span class="token punctuation">(</span></span>
<span class="line">    gameInstance<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">    payload<span class="token punctuation">.</span>userId<span class="token punctuation">,</span></span>
<span class="line">    answerData</span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 5. Diffusion des résultats</span></span>
<span class="line">  io<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token constant">GAME_EVENTS</span><span class="token punctuation">.</span><span class="token constant">LEADERBOARD_UPDATE</span><span class="token punctuation">,</span> leaderboard<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="service-de-scoring-scoringservice" tabindex="-1"><a class="header-anchor" href="#service-de-scoring-scoringservice"><span>Service de scoring (<code>ScoringService</code>)</span></a></h2><h3 id="interface-principale" tabindex="-1"><a class="header-anchor" href="#interface-principale"><span>Interface principale</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">interface</span> <span class="token class-name">ScoreResult</span> <span class="token punctuation">{</span></span>
<span class="line">  scoreUpdated<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  scoreAdded<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  totalScore<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  answerChanged<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  previousAnswer<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>
<span class="line">  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  timePenalty<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ScoringService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">submitAnswerWithScoring</span><span class="token punctuation">(</span></span>
<span class="line">    gameInstanceId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">    userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">    answerData<span class="token operator">:</span> AnswerSubmissionPayload</span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ScoreResult<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Logique complète de scoring</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">calculateAnswerScore</span><span class="token punctuation">(</span></span>
<span class="line">    question<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span></span>
<span class="line">    answer<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span></span>
<span class="line">    serverTimeSpent<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    totalPresentationTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    accessCode<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> score<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> timePenalty<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Calcul détaillé du score</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fonctionnement-interne" tabindex="-1"><a class="header-anchor" href="#fonctionnement-interne"><span>Fonctionnement interne</span></a></h3><ol><li><strong>Validation de l&#39;intégrité</strong> : Vérification que la réponse n&#39;a pas été modifiée</li><li><strong>Calcul de la correction</strong> : Selon le type de question (QCM/numérique)</li><li><strong>Application des pénalités</strong> : Temporelles et selon les redémarrages</li><li><strong>Mise à jour atomique</strong> : Score en base + cache Redis</li></ol><h2 id="service-des-timers-canonicaltimerservice" tabindex="-1"><a class="header-anchor" href="#service-des-timers-canonicaltimerservice"><span>Service des timers (<code>CanonicalTimerService</code>)</span></a></h2><h3 id="role-central" tabindex="-1"><a class="header-anchor" href="#role-central"><span>Rôle central</span></a></h3><p>Le <code>CanonicalTimerService</code> gère tous les aspects temporels :</p><ul><li><strong>Démarrage des timers</strong> pour chaque question</li><li><strong>Suivi du temps serveur</strong> vs temps client</li><li><strong>Gestion des redémarrages</strong> de timer</li><li><strong>Calcul des pénalités</strong> basées sur le temps</li></ul><h3 id="structure-des-donnees-redis" tabindex="-1"><a class="header-anchor" href="#structure-des-donnees-redis"><span>Structure des données Redis</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Clé : mathquest:timer:{accessCode}:{questionUid}</span></span>
<span class="line"><span class="token comment">// Valeur :</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;durationMs&quot;</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span>           <span class="token comment">// Durée totale en ms</span></span>
<span class="line">  <span class="token string-property property">&quot;startTime&quot;</span><span class="token operator">:</span> <span class="token number">1640000000000</span><span class="token punctuation">,</span>    <span class="token comment">// Timestamp de démarrage</span></span>
<span class="line">  <span class="token string-property property">&quot;restartCount&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>             <span class="token comment">// Nombre de redémarrages</span></span>
<span class="line">  <span class="token string-property property">&quot;lastRestartTime&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>       <span class="token comment">// Dernier redémarrage</span></span>
<span class="line">  <span class="token string-property property">&quot;totalPausedTime&quot;</span><span class="token operator">:</span> <span class="token number">0</span>           <span class="token comment">// Temps total en pause</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="methodes-principales" tabindex="-1"><a class="header-anchor" href="#methodes-principales"><span>Méthodes principales</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">CanonicalTimerService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">startTimer</span><span class="token punctuation">(</span>accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> questionUid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> durationMs<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getRemainingTime</span><span class="token punctuation">(</span>accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> questionUid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">restartTimer</span><span class="token punctuation">(</span>accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> questionUid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getServerTimeSpent</span><span class="token punctuation">(</span>accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> questionUid<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="service-d-etat-des-parties-gamestateservice" tabindex="-1"><a class="header-anchor" href="#service-d-etat-des-parties-gamestateservice"><span>Service d&#39;état des parties (<code>GameStateService</code>)</span></a></h2><h3 id="stockage-en-redis" tabindex="-1"><a class="header-anchor" href="#stockage-en-redis"><span>Stockage en Redis</span></a></h3><p>L&#39;état des parties est stocké dans Redis pour des accès rapides :</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Clé : mathquest:game:{accessCode}</span></span>
<span class="line"><span class="token comment">// Valeur :</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;gameState&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;questionUids&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;q1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;q2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;q3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;currentQuestionIndex&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;startTime&quot;</span><span class="token operator">:</span> <span class="token number">1640000000000</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;participants&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;user123&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&quot;score&quot;</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-property property">&quot;answers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;q1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;q2&quot;</span><span class="token operator">:</span> <span class="token string">&quot;B&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="methodes-cles" tabindex="-1"><a class="header-anchor" href="#methodes-cles"><span>Méthodes clés</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">GameStateService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getFullGameState</span><span class="token punctuation">(</span>sessionKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">updateParticipantScore</span><span class="token punctuation">(</span>accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> score<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">addParticipant</span><span class="token punctuation">(</span>accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">removeParticipant</span><span class="token punctuation">(</span>accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gestion-des-participants" tabindex="-1"><a class="header-anchor" href="#gestion-des-participants"><span>Gestion des participants</span></a></h2><h3 id="service-dedie-gameparticipantservice" tabindex="-1"><a class="header-anchor" href="#service-dedie-gameparticipantservice"><span>Service dédié (<code>GameParticipantService</code>)</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">GameParticipantService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">joinGame</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> accessCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>JoinResult<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">leaveGame</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> gameInstanceId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">updateScore</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> gameInstanceId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> score<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">getLeaderboard</span><span class="token punctuation">(</span>gameInstanceId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>LeaderboardEntry<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flux-d-integration-d-un-participant" tabindex="-1"><a class="header-anchor" href="#flux-d-integration-d-un-participant"><span>Flux d&#39;intégration d&#39;un participant</span></a></h3><ol><li><strong>Validation du code d&#39;accès</strong></li><li><strong>Vérification des droits</strong> (place disponible, partie pas commencée)</li><li><strong>Création de l&#39;entrée</strong> en base de données</li><li><strong>Ajout au cache Redis</strong></li><li><strong>Notification Socket.IO</strong> aux autres participants</li></ol><h2 id="communication-socket-io" tabindex="-1"><a class="header-anchor" href="#communication-socket-io"><span>Communication Socket.IO</span></a></h2><h3 id="evenements-principaux" tabindex="-1"><a class="header-anchor" href="#evenements-principaux"><span>Événements principaux</span></a></h3><h4 id="cote-client-→-serveur" tabindex="-1"><a class="header-anchor" href="#cote-client-→-serveur"><span>Côté client → serveur</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Rejoindre une partie</span></span>
<span class="line">socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;JOIN_GAME&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  accessCode<span class="token operator">:</span> <span class="token string">&#39;ABC123&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  userId<span class="token operator">:</span> <span class="token string">&#39;user123&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  username<span class="token operator">:</span> <span class="token string">&#39;Alice&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Soumettre une réponse</span></span>
<span class="line">socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;GAME_ANSWER&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  accessCode<span class="token operator">:</span> <span class="token string">&#39;ABC123&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  userId<span class="token operator">:</span> <span class="token string">&#39;user123&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  questionUid<span class="token operator">:</span> <span class="token string">&#39;q1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  answer<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  timeSpent<span class="token operator">:</span> <span class="token number">25000</span>  <span class="token comment">// millisecondes</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="cote-serveur-→-client" tabindex="-1"><a class="header-anchor" href="#cote-serveur-→-client"><span>Côté serveur → client</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Nouvelle question</span></span>
<span class="line">io<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;QUESTION_START&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  question<span class="token operator">:</span> questionData<span class="token punctuation">,</span></span>
<span class="line">  timeLimit<span class="token operator">:</span> <span class="token number">60000</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Mise à jour du leaderboard</span></span>
<span class="line">io<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;LEADERBOARD_UPDATE&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  leaderboard<span class="token operator">:</span> sortedParticipants<span class="token punctuation">,</span></span>
<span class="line">  currentQuestionIndex<span class="token operator">:</span> <span class="token number">2</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Fin de la partie</span></span>
<span class="line">io<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;GAME_END&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  finalLeaderboard<span class="token operator">:</span> finalResults<span class="token punctuation">,</span></span>
<span class="line">  winner<span class="token operator">:</span> topParticipant</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gestion-des-rooms" tabindex="-1"><a class="header-anchor" href="#gestion-des-rooms"><span>Gestion des rooms</span></a></h3><p>Chaque partie utilise une &quot;room&quot; Socket.IO isolée :</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Rejoindre la room de la partie</span></span>
<span class="line">socket<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Émettre uniquement aux participants de cette partie</span></span>
<span class="line">io<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;event&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Quitter la room</span></span>
<span class="line">socket<span class="token punctuation">.</span><span class="token function">leave</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gestion-des-erreurs-et-logging" tabindex="-1"><a class="header-anchor" href="#gestion-des-erreurs-et-logging"><span>Gestion des erreurs et logging</span></a></h2><h3 id="middleware-de-logging" tabindex="-1"><a class="header-anchor" href="#middleware-de-logging"><span>Middleware de logging</span></a></h3><p>Tous les services utilisent un logger centralisé :</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> createLogger <span class="token keyword">from</span> <span class="token string">&#39;@/utils/logger&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> logger <span class="token operator">=</span> <span class="token function">createLogger</span><span class="token punctuation">(</span><span class="token string">&#39;ScoringService&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  userId<span class="token punctuation">,</span></span>
<span class="line">  gameInstanceId<span class="token punctuation">,</span></span>
<span class="line">  score<span class="token operator">:</span> result<span class="token punctuation">.</span>score<span class="token punctuation">,</span></span>
<span class="line">  timePenalty<span class="token operator">:</span> result<span class="token punctuation">.</span>timePenalty</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;Score calculated successfully&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gestion-des-erreurs" tabindex="-1"><a class="header-anchor" href="#gestion-des-erreurs"><span>Gestion des erreurs</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> ScoringService<span class="token punctuation">.</span><span class="token function">calculateAnswerScore</span><span class="token punctuation">(</span><span class="token comment">/*...*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> data<span class="token operator">:</span> result <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span> error<span class="token punctuation">,</span> userId<span class="token punctuation">,</span> questionUid <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;Failed to calculate score&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> error<span class="token operator">:</span> <span class="token string">&#39;Score calculation failed&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="optimisations-de-performance" tabindex="-1"><a class="header-anchor" href="#optimisations-de-performance"><span>Optimisations de performance</span></a></h2><h3 id="cache-redis" tabindex="-1"><a class="header-anchor" href="#cache-redis"><span>Cache Redis</span></a></h3><ul><li><strong>État des parties</strong> : Accès O(1) aux données de session</li><li><strong>Timers</strong> : Suivi précis du temps serveur</li><li><strong>Leaderboards</strong> : Mise à jour atomique des scores</li></ul><h3 id="base-de-donnees" tabindex="-1"><a class="header-anchor" href="#base-de-donnees"><span>Base de données</span></a></h3><ul><li><strong>Index composites</strong> sur les requêtes fréquentes</li><li><strong>Pooling de connexions</strong> pour éviter la surcharge</li><li><strong>Transactions</strong> pour les opérations critiques</li></ul><h3 id="socket-io" tabindex="-1"><a class="header-anchor" href="#socket-io"><span>Socket.IO</span></a></h3><ul><li><strong>Compression</strong> des messages pour réduire la bande passante</li><li><strong>Batching</strong> des mises à jour pour éviter le spam</li><li><strong>Heartbeat</strong> pour détecter les déconnexions</li></ul><h2 id="tests-et-validation" tabindex="-1"><a class="header-anchor" href="#tests-et-validation"><span>Tests et validation</span></a></h2><h3 id="tests-unitaires" tabindex="-1"><a class="header-anchor" href="#tests-unitaires"><span>Tests unitaires</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;ScoringService&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;should calculate correct score for perfect QCM answer&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> ScoringService<span class="token punctuation">.</span><span class="token function">calculateAnswerScore</span><span class="token punctuation">(</span></span>
<span class="line">      mockQuestion<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// Correct answer</span></span>
<span class="line">      <span class="token number">30000</span><span class="token punctuation">,</span> <span class="token comment">// 30 seconds</span></span>
<span class="line">      <span class="token number">30000</span><span class="token punctuation">,</span> <span class="token comment">// Same as server time</span></span>
<span class="line">      <span class="token string">&#39;TEST123&#39;</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">expect</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>score<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeGreaterThan</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">expect</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>timePenalty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeLessThan</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tests-d-integration" tabindex="-1"><a class="header-anchor" href="#tests-d-integration"><span>Tests d&#39;intégration</span></a></h3><p>Les tests d&#39;intégration valident les interactions entre services :</p><ul><li><strong>Flux complet</strong> : De la réponse à la mise à jour du leaderboard</li><li><strong>Concurrence</strong> : Gestion des réponses simultanées</li><li><strong>Déconnexions</strong> : Récupération après perte de connexion</li></ul><p>Cette architecture modulaire assure la maintenabilité, l&#39;évolutivité et la fiabilité du système de gestion des quiz de MathQuest.</p>`,63)]))}const l=n(p,[["render",i]]),r=JSON.parse('{"path":"/details-techniques/backend-services.html","title":"Services backend","lang":"fr-FR","frontmatter":{},"git":{"updatedTime":1758286875000,"contributors":[{"name":"alexisflesch","username":"alexisflesch","email":"alexis.flesch@gmail.com","commits":1,"url":"https://github.com/alexisflesch"}],"changelog":[{"hash":"8fbb71211cc25ed6748dfb46362eb2796047c9da","time":1758286875000,"email":"alexis.flesch@gmail.com","author":"alexisflesch","message":"updating doc"}]},"filePathRelative":"details-techniques/backend-services.md"}');export{l as comp,r as data};
