import{_ as n,c as a,a as e,o as p}from"./app-DoDG4mLI.js";const t={};function l(c,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="systeme-de-scoring" tabindex="-1"><a class="header-anchor" href="#systeme-de-scoring"><span>Système de scoring</span></a></h1><h2 id="vue-d-ensemble" tabindex="-1"><a class="header-anchor" href="#vue-d-ensemble"><span>Vue d&#39;ensemble</span></a></h2><p>MathQuest utilise un système de scoring sophistiqué qui prend en compte plusieurs facteurs :</p><ul><li>La correction de la réponse</li><li>Le temps mis pour répondre</li><li>Le type de question (QCM vs numérique)</li><li>Les redémarrages de timer</li><li>Le mode de jeu (quiz, tournoi, entraînement)</li></ul><h2 id="score-de-base" tabindex="-1"><a class="header-anchor" href="#score-de-base"><span>Score de base</span></a></h2><h3 id="calcul-du-score-par-question" tabindex="-1"><a class="header-anchor" href="#calcul-du-score-par-question"><span>Calcul du score par question</span></a></h3><p>Le score total d&#39;une partie est réparti équitablement entre toutes les questions :</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">score_base_par_question = 1000 / nombre_total_questions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Exemple :</strong></p><ul><li>Quiz avec 10 questions → 100 points par question</li><li>Quiz avec 20 questions → 50 points par question</li></ul><h2 id="score-de-correction" tabindex="-1"><a class="header-anchor" href="#score-de-correction"><span>Score de correction</span></a></h2><h3 id="questions-a-choix-multiples-qcm" tabindex="-1"><a class="header-anchor" href="#questions-a-choix-multiples-qcm"><span>Questions à choix multiples (QCM)</span></a></h3><p>MathQuest utilise un système de scoring partiel pour les QCM :</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">score_correction = max(0, (C_B / B) - (C_M / M))</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Où :</p><ul><li><code>B</code> = nombre d&#39;options correctes</li><li><code>C_B</code> = nombre d&#39;options correctes sélectionnées</li><li><code>C_M</code> = nombre d&#39;options incorrectes sélectionnées</li><li><code>M</code> = nombre d&#39;options incorrectes totales</li></ul><p><strong>Exemples :</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Question : Quelle est la capitale de la France ?</span></span>
<span class="line"><span class="token comment">// Options : [Paris, Lyon, Marseille] - Correct : [true, false, false]</span></span>
<span class="line"><span class="token comment">// B = 1, M = 2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Réponse parfaite : [Paris] → C_B = 1, C_M = 0</span></span>
<span class="line"><span class="token comment">// Score = max(0, (1/1) - (0/2)) = 1.0 (100%)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Réponse partielle : [Paris, Lyon] → C_B = 1, C_M = 1</span></span>
<span class="line"><span class="token comment">// Score = max(0, (1/1) - (1/2)) = 0.5 (50%)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Mauvaise réponse : [Lyon] → C_B = 0, C_M = 1</span></span>
<span class="line"><span class="token comment">// Score = max(0, (0/1) - (1/2)) = 0.0 (0%)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="questions-numeriques" tabindex="-1"><a class="header-anchor" href="#questions-numeriques"><span>Questions numériques</span></a></h3><p>Les questions numériques utilisent un système binaire (correct/incorrect) avec tolérance :</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">function</span> <span class="token function">checkNumericAnswer</span><span class="token punctuation">(</span><span class="token parameter">correctAnswer<span class="token punctuation">,</span> userAnswer<span class="token punctuation">,</span> tolerance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> difference <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>userAnswer <span class="token operator">-</span> correctAnswer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> difference <span class="token operator">&lt;=</span> tolerance<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Exemple :</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Question : Quelle est la racine carrée de 16 ?</span></span>
<span class="line"><span class="token comment">// Réponse correcte : 4, tolérance : 0.1</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkNumericAnswer</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4.05</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>     <span class="token comment">// true  → score = 1.0</span></span>
<span class="line"><span class="token function">checkNumericAnswer</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4.2</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>      <span class="token comment">// false → score = 0.0</span></span>
<span class="line"><span class="token function">checkNumericAnswer</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>       <span class="token comment">// true  → conversion automatique</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="penalite-temporelle" tabindex="-1"><a class="header-anchor" href="#penalite-temporelle"><span>Pénalité temporelle</span></a></h2><h3 id="principe-general" tabindex="-1"><a class="header-anchor" href="#principe-general"><span>Principe général</span></a></h3><p>La pénalité temporelle utilise une fonction logarithmique pour éviter les pénalités trop sévères :</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">facteur_pénalité = min(1, log(temps_effectif + 1) / log(limite_temps + 1))</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="gestion-des-redemarrages-de-timer" tabindex="-1"><a class="header-anchor" href="#gestion-des-redemarrages-de-timer"><span>Gestion des redémarrages de timer</span></a></h3><p>Le système adapte les pénalités selon le nombre de redémarrages :</p><table><thead><tr><th>Redémarrage</th><th>Pénalité de base</th><th>Pénalité maximale</th></tr></thead><tbody><tr><td>0 (premier)</td><td>0%</td><td>30%</td></tr><tr><td>1 (second)</td><td>30%</td><td>50%</td></tr><tr><td>2+ (suivant)</td><td>50%</td><td>50%</td></tr></tbody></table><h3 id="calcul-detaille" tabindex="-1"><a class="header-anchor" href="#calcul-detaille"><span>Calcul détaillé</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">function</span> <span class="token function">calculateTimePenalty</span><span class="token punctuation">(</span><span class="token parameter">scoreBeforePenalty<span class="token punctuation">,</span> effectiveTime<span class="token punctuation">,</span> timeLimit<span class="token punctuation">,</span> restartCount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Facteur logarithmique</span></span>
<span class="line">  <span class="token keyword">const</span> timePenaltyFactor <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>effectiveTime <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timeLimit <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Plages de pénalité selon les redémarrages</span></span>
<span class="line">  <span class="token keyword">let</span> basePenaltyPercent <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> maxPenaltyPercent <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>restartCount <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    basePenaltyPercent <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">;</span></span>
<span class="line">    maxPenaltyPercent <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>restartCount <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    basePenaltyPercent <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span></span>
<span class="line">    maxPenaltyPercent <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Pénalité dynamique</span></span>
<span class="line">  <span class="token keyword">const</span> penaltyRange <span class="token operator">=</span> maxPenaltyPercent <span class="token operator">-</span> basePenaltyPercent<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> dynamicPenaltyPercent <span class="token operator">=</span> basePenaltyPercent <span class="token operator">+</span> <span class="token punctuation">(</span>penaltyRange <span class="token operator">*</span> timePenaltyFactor<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Application de la pénalité</span></span>
<span class="line">  <span class="token keyword">const</span> timePenalty <span class="token operator">=</span> scoreBeforePenalty <span class="token operator">*</span> dynamicPenaltyPercent<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> finalScore <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> scoreBeforePenalty <span class="token operator">-</span> timePenalty<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">finalScore</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>finalScore <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">timePenalty</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>timePenalty <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Exemple concret :</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Question à 100 points, limite 60 secondes, premier essai</span></span>
<span class="line"><span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token function">calculateTimePenalty</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// timePenaltyFactor ≈ 0.5</span></span>
<span class="line"><span class="token comment">// dynamicPenaltyPercent = 0 + (0.3 * 0.5) = 0.15 (15%)</span></span>
<span class="line"><span class="token comment">// finalScore = 100 - 15 = 85</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Même question, deuxième essai (redémarrage)</span></span>
<span class="line"><span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token function">calculateTimePenalty</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// timePenaltyFactor ≈ 0.7</span></span>
<span class="line"><span class="token comment">// dynamicPenaltyPercent = 0.3 + (0.2 * 0.7) = 0.44 (44%)</span></span>
<span class="line"><span class="token comment">// finalScore = 100 - 44 = 56</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="score-final-par-question" tabindex="-1"><a class="header-anchor" href="#score-final-par-question"><span>Score final par question</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">score_final = max(0, (score_base × score_correction) - pénalité_temporelle)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="exemple-complet" tabindex="-1"><a class="header-anchor" href="#exemple-complet"><span>Exemple complet</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Quiz de 10 questions = 100 points par question</span></span>
<span class="line"><span class="token comment">// Question QCM : 3 options, 1 correcte</span></span>
<span class="line"><span class="token comment">// Temps limite : 60 secondes</span></span>
<span class="line"><span class="token comment">// Utilisateur répond en 25 secondes, parfaitement</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> baseScore <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>                    <span class="token comment">// 1000 / 10 questions</span></span>
<span class="line"><span class="token keyword">const</span> correctnessScore <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>             <span class="token comment">// Réponse parfaite</span></span>
<span class="line"><span class="token keyword">const</span> scoreBeforePenalty <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1.0</span><span class="token punctuation">;</span>    <span class="token comment">// 100 points</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> timeSpent <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>                     <span class="token comment">// secondes</span></span>
<span class="line"><span class="token keyword">const</span> timeLimit <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>                     <span class="token comment">// secondes</span></span>
<span class="line"><span class="token keyword">const</span> restartCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                   <span class="token comment">// Premier essai</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Calcul de la pénalité</span></span>
<span class="line"><span class="token keyword">const</span> timeFactor <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">25</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ≈ 0.63</span></span>
<span class="line"><span class="token keyword">const</span> penaltyPercent <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">0.3</span> <span class="token operator">*</span> <span class="token number">0.63</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// ≈ 0.19 (19%)</span></span>
<span class="line"><span class="token keyword">const</span> timePenalty <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">0.19</span><span class="token punctuation">;</span>                         <span class="token comment">// ≈ 19 points</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> finalScore <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">// 81 points</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modes-de-jeu-et-scoring" tabindex="-1"><a class="header-anchor" href="#modes-de-jeu-et-scoring"><span>Modes de jeu et scoring</span></a></h2><h3 id="mode-quiz" tabindex="-1"><a class="header-anchor" href="#mode-quiz"><span>Mode Quiz</span></a></h3><ul><li>Score en temps réel</li><li>Leaderboard mis à jour après chaque réponse</li><li>Pénalités temporelles appliquées</li></ul><h3 id="mode-tournoi" tabindex="-1"><a class="header-anchor" href="#mode-tournoi"><span>Mode Tournoi</span></a></h3><ul><li>Système de scoring identique au quiz</li><li>Possibilité de sessions différées</li><li>Gestion des tentatives multiples</li></ul><h3 id="mode-entrainement" tabindex="-1"><a class="header-anchor" href="#mode-entrainement"><span>Mode Entraînement</span></a></h3><ul><li>Pas de timer, pas de pénalités</li><li>Focus sur l&#39;apprentissage</li><li>Score optionnel pour le suivi des progrès</li></ul><h2 id="stockage-des-scores" tabindex="-1"><a class="header-anchor" href="#stockage-des-scores"><span>Stockage des scores</span></a></h2><h3 id="base-de-donnees" tabindex="-1"><a class="header-anchor" href="#base-de-donnees"><span>Base de données</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token comment">-- Score en direct (mises à jour temps réel)</span></span>
<span class="line">liveScore: <span class="token keyword">Int</span> <span class="token variable">@default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Score différé (pour les tournois)</span></span>
<span class="line">deferredScore: <span class="token keyword">Int</span> <span class="token variable">@default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Nombre de tentatives</span></span>
<span class="line">nbAttempts: <span class="token keyword">Int</span> <span class="token variable">@default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cache-redis" tabindex="-1"><a class="header-anchor" href="#cache-redis"><span>Cache Redis</span></a></h3><p>Les scores intermédiaires sont stockés dans Redis pour :</p><ul><li>Mise à jour rapide du leaderboard</li><li>Gestion des sessions différées</li><li>Synchronisation entre participants</li></ul><h2 id="debugging-et-monitoring" tabindex="-1"><a class="header-anchor" href="#debugging-et-monitoring"><span>Debugging et monitoring</span></a></h2><p>Le système de scoring produit des logs détaillés :</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;questionType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;multiple-choice&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;totalQuestions&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;baseScorePerQuestion&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;correctnessScore&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;serverTimeSpentSeconds&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timeLimitSeconds&quot;</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;restartCount&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timePenaltyFactor&quot;</span><span class="token operator">:</span> <span class="token number">0.63</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;dynamicPenaltyPercent&quot;</span><span class="token operator">:</span> <span class="token number">0.19</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;finalScore&quot;</span><span class="token operator">:</span> <span class="token number">81</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timePenalty&quot;</span><span class="token operator">:</span> <span class="token number">19</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ces logs permettent de déboguer les calculs de score et d&#39;optimiser le système de pénalités.</p>`,55)]))}const i=n(t,[["render",l]]),r=JSON.parse('{"path":"/details-techniques/scoring.html","title":"Système de scoring","lang":"fr-FR","frontmatter":{},"git":{"updatedTime":1758286875000,"contributors":[{"name":"alexisflesch","username":"alexisflesch","email":"alexis.flesch@gmail.com","commits":1,"url":"https://github.com/alexisflesch"}],"changelog":[{"hash":"8fbb71211cc25ed6748dfb46362eb2796047c9da","time":1758286875000,"email":"alexis.flesch@gmail.com","author":"alexisflesch","message":"updating doc"}]},"filePathRelative":"details-techniques/scoring.md"}');export{i as comp,r as data};
