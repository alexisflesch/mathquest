import{_ as a,c as l,a as r,b as e,d as s,w as o,e as i,r as u,o as d}from"./app-C1oym2Nb.js";const p={};function c(m,n){const t=u("RouterLink");return d(),l("div",null,[n[3]||(n[3]=r('<h1 id="utilisation-de-l-application" tabindex="-1"><a class="header-anchor" href="#utilisation-de-l-application"><span>Utilisation de l&#39;application</span></a></h1><blockquote><p>Cette page pr√©sente les principales fonctionnalit√©s de MathQuest.</p></blockquote><h2 id="fonctionnalites-principales" tabindex="-1"><a class="header-anchor" href="#fonctionnalites-principales"><span>Fonctionnalit√©s principales</span></a></h2><p>MathQuest propose trois modes de jeu principaux :</p><ul><li><strong>Quiz (mode enseignant)</strong> : Quiz en temps r√©el pilot√© par l&#39;enseignant. L&#39;enseignant contr√¥le l&#39;encha√Ænement des questions, le timer, et la diffusion des r√©ponses/corrections. Les √©l√®ves r√©pondent en direct, sans feedback automatique (feedback oral ou √† la fin).</li><li><strong>Tournoi (mode comp√©tition)</strong> : Tournoi synchrone ou diff√©r√©. Tous les participants re√ßoivent les questions en m√™me temps (synchrone) ou peuvent rejouer la partie en diff√©r√© (asynchrone). Le backend g√®re le timer, la progression, le classement et la diffusion des bonnes r√©ponses et des feedbacks (si pr√©sents) √† la fin de chaque question.</li><li><strong>Entra√Ænement (mode libre)</strong> : Mode individuel, sans timer. L&#39;utilisateur choisit d&#39;encha√Æner les questions √† son rythme, re√ßoit un feedback imm√©diat apr√®s chaque r√©ponse, et peut recommencer autant de fois qu&#39;il le souhaite. Aucun score n&#39;est enregistr√©.</li></ul><h2 id="prise-en-main-rapide" tabindex="-1"><a class="header-anchor" href="#prise-en-main-rapide"><span>Prise en main rapide</span></a></h2><ol><li><p><strong>Connexion √† l&#39;application</strong></p><ul><li>Choisissez votre profil (√©l√®ve, enseignant, invit√©) √† la connexion. En mode invit√©, pas besoin de cr√©er un compte: choisissez simplement un pseudo et un avatar et vous √™tes pr√™t √† jouer. Vos r√©sultats ne seront pas sauvegard√©s mais vous pourrez mettre √† jour votre profil plus tard si vous le souhaitez.</li><li>Si vous √™tes enseignant, vous pouvez cr√©er un compte vous permettant de g√©rer vos activit√©s: regroupez des questions et cr√©ez des quiz pour une utilisation en classe, ou des tournois voire des sessions d&#39;entra√Ænement pour vos √©l√®ves.</li></ul></li><li><p><strong>D√©roulement selon le mode</strong></p><ul><li><strong>Quiz</strong> : L&#39;enseignant cr√©e ou s√©lectionne un quiz, invite les √©l√®ves √† rejoindre, puis contr√¥le le d√©roulement.</li><li><strong>Tournoi</strong> : Un utilisateur (√©l√®ve ou enseignant) lance un tournoi (synchrone ou diff√©r√©), les participants rejoignent via un code, le backend g√®re la progression.</li><li><strong>Entra√Ænement</strong> : L&#39;utilisateur d√©marre une session d&#39;entra√Ænement libre, r√©pond √† des questions √† son rythme, et obtient un feedback imm√©diat.</li></ul></li></ol><h2 id="guides-detailles" tabindex="-1"><a class="header-anchor" href="#guides-detailles"><span>Guides d√©taill√©s</span></a></h2>',8)),e("ul",null,[e("li",null,[s(t,{to:"/utilisation/quiz/"},{default:o(()=>n[0]||(n[0]=[i("üìä Mode Quiz (enseignant)")])),_:1,__:[0]})]),e("li",null,[s(t,{to:"/utilisation/tournoi/"},{default:o(()=>n[1]||(n[1]=[i("üèÜ Mode Tournoi")])),_:1,__:[1]})]),e("li",null,[s(t,{to:"/utilisation/entrainement/"},{default:o(()=>n[2]||(n[2]=[i("üéØ Mode Entra√Ænement")])),_:1,__:[2]})])]),n[4]||(n[4]=e("h2",{id:"architecture-de-l-application-apercu",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#architecture-de-l-application-apercu"},[e("span",null,"Architecture de l'application (aper√ßu)")])],-1)),n[5]||(n[5]=e("ul",null,[e("li",null,[e("strong",null,"Frontend"),i(" : Application React/Next.js (interface utilisateur, navigation, gestion d'√©tat, communication temps r√©el via Socket.IO).")]),e("li",null,[e("strong",null,"Backend"),i(" : API Node.js/Express (gestion des utilisateurs, parties, questions, statistiques, WebSocket).")]),e("li",null,[e("strong",null,"Base de donn√©es"),i(" : PostgreSQL, sch√©ma g√©r√© par Prisma.")])],-1))])}const h=a(p,[["render",c]]),f=JSON.parse(`{"path":"/utilisation/","title":"Utilisation de l'application","lang":"fr-FR","frontmatter":{"title":"Utilisation de l'application"},"git":{"updatedTime":1751575389000,"contributors":[{"name":"alexisflesch","username":"alexisflesch","email":"alexis.flesch@gmail.com","commits":1,"url":"https://github.com/alexisflesch"}],"changelog":[{"hash":"ff0e59106460a31d3b84585d7643b474d7e21cda","time":1751575389000,"email":"alexis.flesch@gmail.com","author":"alexisflesch","message":"creating doc"}]},"filePathRelative":"utilisation/README.md"}`);export{h as comp,f as data};
